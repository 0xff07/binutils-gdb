# .Sanitize for devo/gdb/config/mips.

# Each directory to survive its way into a release will need a file
# like this one called "./.Sanitize".  All keyword lines must exist,
# and must exist in the order specified by this file.  Each directory
# in the tree will be processed, top down, in the following order.

# Hash started lines like this one are comments and will be deleted
# before anything else is done.  Blank lines will also be squashed
# out.

# The lines between the "Do-first:" line and the "Things-to-keep:"
# line are executed as a /bin/sh shell script before anything else is
# done in this directory.

Do-first:

# All files listed between the "Things-to-keep:" line and the
# "Files-to-sed:" line will be kept.  All other files will be removed.
# Directories listed in this section will have their own Sanitize
# called.  Directories not listed will be removed in their entirety
# with rm -rf.

Things-to-keep:

bigmips.mt
bigmips64.mt
decstation.mh
decstation.mt
embed.mt
embed64.mt
embedl.mt
embedl64.mt
irix3.mh
irix3.mt
irix4.mh
irix5.mh
irix5.mt
littlemips.mh
littlemips.mt
mipsel64.mt
mipsm3.mh
mipsm3.mt
mipsv4.mh
mipsv4.mt
news-mips.mh
nm-irix3.h
nm-irix4.h
nm-irix5.h
nm-mips.h
nm-news-mips.h
nm-riscos.h
riscos.mh
tm-bigmips.h
tm-bigmips64.h
tm-embed.h
tm-embed64.h
tm-embedl.h
tm-embedl64.h
tm-irix3.h
tm-irix5.h
tm-mips.h
tm-mips64.h
tm-mipsm3.h
tm-mipsv4.h
tm-vr4300.h
tm-vr4300el.h
tm-vxmips.h
vr4300.mt
vr4300el.mt
vxmips.mt
xm-irix3.h
xm-irix4.h
xm-irix5.h
xm-mips.h
xm-mipsm3.h
xm-mipsv4.h
xm-news-mips.h
xm-riscos.h

Things-to-lose:


Do-last:

if ( echo $* | grep keep\-gm > /dev/null ) ; then
	for i in * ; do
		if test ! -d $i && (grep sanitize-gm $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping gm stuff in $i
			fi
		fi
	done
else
	for i in * ; do
		if test ! -d $i && (grep sanitize-gm $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"gm\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-gm/,/end-\sanitize\-gm/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

# End of file.
