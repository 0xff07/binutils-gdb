# .Sanitize for devo/gdb.

# Each directory to survive it's way into a release will need a file
# like this one called "./.Sanitize".  All keyword lines must exist,
# and must exist in the order specified by this file.  Each directory
# in the tree will be processed, top down, in the following order.

# Hash started lines like this one are comments and will be deleted
# before anything else is done.  Blank lines will also be squashed
# out.

# The lines between the "Do-first:" line and the "Things-to-keep:"
# line are executed as a /bin/sh shell script before anything else is
# done in this 

Do-first:

if ( echo $* | grep keep\-chill > /dev/null ) ; then
	keep_these_too="ch-exp.y ch-lang.c ch-lang.h ch-typeprint.c ch-valprint.c"
fi

# All files listed between the "Things-to-keep:" line and the
# "Files-to-sed:" line will be kept.  All other files will be removed.
# Directories listed in this section will have their own Sanitize
# called.  Directories not listed will be removed in their entirety
# with rm -rf.

Things-to-keep:

.gdbinit
29k-share
COPYING
ChangeLog
ChangeLog-3.x
ChangeLog-9091
Convex.notes
Makefile.in
NEWS
Projects
README
TODO
a68v-nat.c
alldeps.mak
alloca.c
altos-xdep.c
am29k-pinsn.c
am29k-tdep.c
arm-convert.s
arm-pinsn.c
arm-tdep.c
arm-xdep.c
blockframe.c
breakpoint.c
breakpoint.h
buildsym.c
buildsym.h
c-exp.y
c-lang.c
c-lang.h
c-typeprint.c
c-valprint.c
call-cmds.h
coffread.c
command.c
command.h
complaints.c
complaints.h
config
configure.in
convex-pinsn.c
convex-tdep.c
convex-xdep.c
copying.awk
copying.c
core.c
coredep.c
corelow.c
cp-valprint.c
createtags
dbxread.c
defs.h
demangle.c
depend
doc
dwarfread.c
elfread.c
environ.c
environ.h
eval.c
exec.c
expprint.c
expression.h
findvar.c
fork-child.c
frame.h
gcc.patch
gdb-stabs.h
gdb.1
gdbcmd.h
gdbcore.h
gdbtypes.c
gdbtypes.h
go32-xdep.c
gould-pinsn.c
gould-xdep.c
h8300-tdep.c
hp300ux-nat.c
hppa-pinsn.c
hppab-core.c
hppab-nat.c
hppab-tdep.c
hppah-nat.c
hppah-tdep.c
i386-pinsn.c
i386-stub.c
i386-tdep.c
i386b-nat.c
i386mach-nat.c
i386v-nat.c
i386v4-nat.c
i387-tdep.c
i960-pinsn.c
i960-tdep.c
infcmd.c
inferior.h
inflow.c
infptrace.c
infrun.c
inftarg.c
irix4-nat.c
kdb-start.c
language.c
language.h
m2-exp.y
m2-lang.c
m2-lang.h
m2-typeprint.c
m2-valprint.c
m68k-pinsn.c
m68k-stub.c
m68k-tdep.c
m88k-nat.c
m88k-pinsn.c
m88k-tdep.c
main.c
maint.c
mem-break.c
minimon.h
minsyms.c
mips-nat.c
mips-pinsn.c
mips-tdep.c
mipsread.c
munch
news-xdep.c
nindy-share
nindy-tdep.c
nm-apollo68b.h
nm-apollo68v.h
nm-hp300bsd.h
nm-hp300hpux.h
nm-hppab.h
nm-hppah.h
nm-i386bsd.h
nm-i386mach.h
nm-i386sco.h
nm-i386sco4.h
nm-i386v.h
nm-i386v4.h
nm-irix3.h
nm-irix4.h
nm-linux.h
nm-m88k.h
nm-mips.h
nm-news.h
nm-rs6000.h
nm-sun2.h
nm-sun3.h
nm-sun386.h
nm-sun4os4.h
nm-sysv4.h
nm-trash.h
nm-ultra3.h
nm-umax.h
nm-vax.h
ns32k-opcode.h
ns32k-pinsn.c
objfiles.c
objfiles.h
paread.c
parse.c
parser-defs.h
partial-stab.h
printcmd.c
procfs.c
putenv.c
pyr-pinsn.c
pyr-tdep.c
pyr-xdep.c
regex.c
regex.h
rem-multi.shar
remote-adapt.c
remote-eb.c
remote-es1800.c
remote-hms.c
remote-mips.c
remote-mm.c
remote-nindy.c
remote-sim.c
remote-st2000.c
remote-udi.c
remote-vx.c
remote-z8k.c
remote.c
rs6000-nat.c
rs6000-pinsn.c
rs6000-tdep.c
saber.suppress
ser-bsd.c
ser-go32.c
ser-termios.c
serial.h
signals.h
solib.c
solib.h
source.c
sparc-nat.c
sparc-pinsn.c
sparc-stub.c
sparc-tdep.c
sparclite
stabsread.c
stabsread.h
stack.c
standalone.c
stuff.c
sun3-nat.c
sun386-nat.c
symfile.c
symfile.h
symm-tdep.c
symm-xdep.c
symmisc.c
symtab.c
symtab.h
tahoe-pinsn.c
target.c
target.h
terminal.h
testsuite
tm-29k.h
tm-3b1.h
tm-68k-noun.h
tm-68k-un.h
tm-68k.h
tm-altos.h
tm-amix.h
tm-arm.h
tm-bigmips.h
tm-convex.h
tm-delta88.h
tm-es1800.h
tm-h8300.h
tm-hp300bsd.h
tm-hp300hpux.h
tm-hppa.h
tm-hppab.h
tm-hppah.h
tm-i386bsd.h
tm-i386v.h
tm-i386v4.h
tm-i960.h
tm-irix3.h
tm-isi.h
tm-linux.h
tm-m88k.h
tm-merlin.h
tm-mips.h
tm-news.h
tm-nindy960.h
tm-np1.h
tm-os68k.h
tm-pn.h
tm-pyr.h
tm-rs6000.h
tm-sparc.h
tm-spc-noun.h
tm-spc-un.h
tm-st2000.h
tm-stratus.h
tm-sun2.h
tm-sun2os4.h
tm-sun3.h
tm-sun386.h
tm-sun3os4.h
tm-sun4os4.h
tm-sun4sol2.h
tm-sunos.h
tm-symmetry.h
tm-sysv4.h
tm-tahoe.h
tm-ultra3.h
tm-umax.h
tm-vax.h
tm-vx68.h
tm-vx960.h
tm-z8k.h
typeprint.c
typeprint.h
ultra3-nat.c
ultra3-xdep.c
umax-xdep.c
utils.c
valarith.c
valops.c
valprint.c
valprint.h
value.h
values.c
vax-pinsn.c
vx-share
xcoffexec.c
xcoffread.c
xcoffsolib.c
xcoffsolib.h
xm-3b1.h
xm-altos.h
xm-amix.h
xm-apollo68b.h
xm-apollo68v.h
xm-arm.h
xm-bigmips.h
xm-convex.h
xm-delta88.h
xm-go32.h
xm-hp300bsd.h
xm-hp300hpux.h
xm-hppab.h
xm-hppah.h
xm-i386bsd.h
xm-i386mach.h
xm-i386sco.h
xm-i386v.h
xm-i386v32.h
xm-i386v4.h
xm-irix3.h
xm-irix4.h
xm-isi.h
xm-linux.h
xm-m68k.h
xm-m88k.h
xm-merlin.h
xm-mips.h
xm-news.h
xm-news1000.h
xm-np1.h
xm-pn.h
xm-pyr.h
xm-rs6000.h
xm-rtbsd.h
xm-sparc.h
xm-stratus.h
xm-sun2.h
xm-sun3.h
xm-sun386.h
xm-sun3os4.h
xm-sun4os4.h
xm-sun4sol2.h
xm-symmetry.h
xm-sysv4.h
xm-tahoe.h
xm-ultra3.h
xm-umax.h
xm-vax.h
xm-vaxbsd.h
xm-vaxult.h
xm-vaxult2.h
z8k-tdep.c

Do-last:

echo Thawing away the \"chill\"...

# Don't try to clean directories here, as the 'mv' command will fail.
# Also, grep fails on NFS mounted directories.
if ( echo $* | grep keep\-chill > /dev/null ) ; then
	for i in * ; do
		if test ! -d $i && (grep sanitize-chill $i > /dev/null) ; then
			echo Keeping chill stuff in $i
		fi
	done
else
	for i in * ; do
		if test ! -d $i && (grep sanitize-chill $i > /dev/null) ; then
			echo Thawing the \"chill\" out of $i...
			cp $i new
			sed '/start\-sanitize\-chill/,/end-\sanitize\-chill/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				echo Caching $i in .Recover...
				mv $i .Recover
			fi
			mv new $i
		fi
	done
	echo Thawing the \"chill\" out of Makefile.in...
	cp Makefile.in new
	sed -e 's/$(srcdir)\/ch-exp.y//g' \
	    -e 's/${srcdir}\/ch-exp.y//g' \
	    -e 's/ch-exp.y//g' \
	    -e 's/ch-exp.tab.c//g' \
	    -e 's/ch-exp.tab.o//g' \
	    -e 's/ch-lang.h//g' \
	    -e 's/ch-lang.c//g' \
	    -e 's/ch-lang.o//g' \
	    -e 's/ch-typeprint.c//g' \
	    -e 's/ch-typeprint.o//g' \
	    -e 's/ch-valprint.c//g' \
	    -e 's/ch-valprint.o//g' \
	    < Makefile.in > new
	if [ -n "${safe}" -a ! -f .Recover/Makefile.in ] ; then
		echo Caching Makefile.in in .Recover...
		mv Makefile.in .Recover
	fi
	mv new Makefile.in
fi

# End of file.
