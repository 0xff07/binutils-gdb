# Copyright 2016 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if { [skip_fortran_tests] } { return -1 }

standard_testfile .f90
load_lib "fortran.exp"

if {[prepare_for_testing $testfile.exp $testfile $srcfile {debug f90}]} {
    return -1
}

if ![runto MAIN__] then {
    perror "couldn't run to breakpoint MAIN__"
    continue
}

# Test if we can set a breakpoint via entry-point name
set ept_name "foo"
gdb_breakpoint $ept_name
gdb_test "continue" \
    [multi_line "Breakpoint $decimal, $ept_name \\(j=1, k=2, l=3, i1=4\\) at .*" \
                ".*"] \
    "continue to breakpoint: $ept_name"

gdb_test "print j" "= 1" "print j, entered via $ept_name"
gdb_test "print k" "= 2" "print k, entered via $ept_name"
gdb_test "print l" "= 3" "print l, entered via $ept_name"
gdb_test "print i1" "= 4" "print i1, entered via $ept_name"
gdb_test "info args" \
  [multi_line "j = 1" \
              "k = 2" \
              "l = 3" \
              "i1 = 4"] \
   "info args, entered via $ept_name"

# Test if we can set a breakpoint via function name
set ept_name "bar"
gdb_breakpoint $ept_name
gdb_test "continue" \
    [multi_line "Breakpoint $decimal, $ept_name \\(i=4, j=5, k=6, i1=7\\) at .*" \
                ".*"] \
    "continue to breakpoint: $ept_name"

gdb_test "print i" "= 4" "print i, entered via $ept_name"
gdb_test "print j" "= 5" "print j, entered via $ept_name"
gdb_test "print k" "= 6" "print k, entered via $ept_name"
gdb_test "print i1" "= 7" "print i1, entered via $ept_name"

set ept_name "tim"
gdb_breakpoint $ept_name
gdb_test "continue" \
    [multi_line "Breakpoint $decimal, $ept_name \\(j=1\\) at .*" \
                ".*"] \
    "continue to breakpoint: $ept_name"

gdb_test "print j" "= 1" "print j, entered via $ept_name"
gdb_test "info args" "j = 1" "info args, entered via $ept_name"
