# Copyright (C) 1997, 1998 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@prep.ai.mit.edu

# use this to debug:
#
#log_user 1

# step-test.exp -- Expect script to test stepping in gdb

if $tracelevel then {
    strace $tracelevel
}

set testfile step-test
set srcfile ${srcdir}/${subdir}/${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}

remote_exec build "rm -f ${binfile}"
if { [gdb_compile "${srcfile}" "${binfile}" executable {debug}] != "" } {
     gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
}

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

if ![runto_main] then {
   fail "Can't run to main"
   return 0
}

# Vanilla step/next
#
gdb_test "next" ".*15.*x = 1;.*" "next 1"
gdb_test "step" ".*16.*y = 2;.*" "step 1"

# With count
#
gdb_test "next 2" ".*18.*w = w.*2;.*" "next 2"
gdb_test "step 3" ".*21.*z = z.*5;.*" "step 3"
gdb_test "next" ".*24.*callee.*OVER.*" "next 3"

# Step over call
#
gdb_test "next" ".*27.*callee.*INTO.*" "next over"

# Step into call
#
gdb_test "step" ".*6.*glob.*"   "step into"

# Step out of call
#
gdb_test "finish" ".*30.*a.*5.*= a.*3.*" "step out"

# Instruction stepping, into
#
gdb_test "stepi"  ".*30.*a.*5.* = a.*3.*"  "stepi 1"
gdb_test "stepi"  ".*30.*a\\\[5\\\] = a.*" "stepi 2"

gdb_test "stepi 7" ".*6.*glob.*"           "stepi into"
gdb_test "finish"  ".*34.*callee.*NEXTI.*" "stepi out"

# Instruction stepping, over
#
gdb_test "nexti"    ".*callee.*NEXTI.*"     "nexti 1"

gdb_test "c" ".*Program exited normally.*" "run to finish"

return 0
