# .Sanitize for gdb/doc.

# Each directory to survive its way into a release will need a file
# like this one called "./.Sanitize".  All keyword lines must exist,
# and must exist in the order specified by this file.  Each directory
# in the tree will be processed, top down, in the following order.

# Hash started lines like this one are comments and will be deleted
# before anything else is done.  Blank lines will also be squashed
# out.

# The lines between the "Do-first:" line and the "Things-to-keep:"
# line are executed as a /bin/sh shell script before anything else is
# done in this directory.

Do-first:

# Note that gdbgui.texinfo is actually a generic document, but right
# now it only describes gdbtk, so we keep/lose as a gdbtk file.

gdbtk_files="gdbgui.texinfo"

if ( echo $* | grep lose\-gdbtk > /dev/null ) ; then
	lose_these_too="${gdbtk_files} ${lose_these_too}"
	if [ -n "${verbose}" ] ; then
		echo Deleting ${gdbtk_files}
	fi
else
	keep_these_too="${gdbtk_files} ${keep_these_too}"
	if [ -n "${verbose}" ] ; then
		echo Keeping ${gdbtk_files}
	fi
fi

# All files listed between the "Things-to-keep:" line and the
# "Files-to-sed:" line will be kept.  All other files will be removed.
# Directories listed in this section will have their own Sanitize
# called.  Directories not listed will be removed in their entirety
# with rm -rf.

# Note that we don't even keep the "config" directory, since it is
# not currently used (since we abolished use of M4 in the docs).

Things-to-keep:

ChangeLog
Makefile.in
a4rc.sed
all-cfg.texi
annotate.texi
configure
configure.in
libgdb.texinfo
gdb.texinfo
gdbint.texinfo
h8-cfg.texi
lpsrc.sed
psrc.sed
refcard.tex
remote.texi
stabs.texinfo

Things-to-lose:

# Cygnus logo bitmap, huge file, no point in bundling all over the place.
cyglogo.eps
# Includes cyglogo.eps.
cygref.tex

# The README file for gdb testers using snapshots.
snapshots.readme

Do-last:

# Don't try to clean directories here, as the 'mv' command will fail.
# Also, grep fails on NFS mounted directories.
if ( echo $* | grep lose\-gdbtk > /dev/null ) ; then
	echo Catering to RMS by removing traces of \"gdbtk\"...
	for i in * ; do
		if test ! -d $i && (grep sanitize-gdbtk $i > /dev/null) ; then
			echo Removing traces of \"gdbtk\" out of $i...
			cp $i new
			sed '/start\-sanitize\-gdbtk/,/end-\sanitize\-gdbtk/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				echo Caching $i in .Recover...
				mv $i .Recover
			fi
			mv new $i
		fi
	done
else
	echo Leaving \"gdbtk\" in the sources...
	for i in * ; do
		if test ! -d $i && (grep sanitize-gdbtk $i > /dev/null) ; then
			echo Keeping \"gdbtk\" stuff in $i, but editing out sanitize lines...
			cp $i new
			sed -e '/start\-sanitize\-gdbtk/d' -e '/end\-sanitize\-gdbtk/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				echo Caching $i in .Recover...
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

# End of file.
