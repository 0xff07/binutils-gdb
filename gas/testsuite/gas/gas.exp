# syntax:
#
# gas_test_stdout args regexp testname
#	looks for regexp on stdout
#
# gas_test args testname
#	just checks that exit status is zero
#

gas_init

#
# Target-independent tests
#

gas_test "p2425.s" "" "pcrel values in assignment"

gas_test_ignore_stdout "p2425.s" "-al" "pcrel values in assignment, with listing"

#
# Some m68k-coff tests
#
if [istarget m68*-*-coff] then {
    gas_test "p2430.s" "" "local branch not in text section"
    gas_test_ignore_stdout "p2430.s" "-al" "local branch not in text section (with listing)"

    gas_test "t1.s" "" "multiple .file directives"

    gas_test "p2389.s" "" "bss fill"
    gas_test_error "p2389a.s" "" "bss fill with non-zero data"

    if [file exists "$testdir/p2411.s"] then {
	gas_test "p2411.s" "" "PR 2411"
    }
}

#
# Some generic m68k tests
#
if [istarget m68*-*-*] then {
    #
    # Operand size dependent on offset computed using operand size
    #
    if [file exists "$testdir/p2425a.s"] then {
	gas_test "p2425a.s" "" "PR 2425"
    }

    gas_test "t2.s" "" "cross-section branch"
}

#
# Solaris-2 on SPARC tests
#
# The two compilers, cc and gcc, generate quite different debugging
# records.  Verify that we can accept both.
#
if [istarget sparc-*-solaris2*] then {
    gas_test "sol-cc.s"  "" "SPARC Solaris cc -g"
    gas_test "sol-gcc.s" "" "SPARC Solaris gcc -g"
}
