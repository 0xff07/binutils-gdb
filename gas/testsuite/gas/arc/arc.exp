# ARC gas testsuite

# Test an insn from a template .s/.d.

proc test_template_insn { tmpl opcode icode } {
    global srcdir subdir objdir

    # Change @OC@ in the template file to $opcode

    set in_fd [open $srcdir/$subdir/$tmpl.s r]
    set out_fd [open $objdir/$opcode.s w]
    # FIXME: check return codes

    while { [gets $in_fd line] >= 0 } {
	regsub "@OC@" $line $opcode line
	puts $out_fd $line
    }

    close $in_fd
    close $out_fd

    # Create output template.

    set in_fd [open $srcdir/$subdir/$tmpl.d r]
    set out_fd [open $objdir/$opcode.d w]
    # FIXME: check return codes

    while { [gets $in_fd line] >= 0 } {
	regsub "@OC@" $line $opcode line
	#send_user "$line\n"
	if [string match "*@IC+?@*" $line] {
	    # Insert the opcode.  It occupies the top 5 bits.
	    regexp "^(.*)@IC\\+(.)@(.*)$" $line junk leftpart n rightpart
	    set n [expr ($icode << 3) + $n]
	    set n [format "%02x" $n]
	    puts $out_fd "$leftpart$n$rightpart"
	} elseif [string match "*@I3+??@*" $line] {
	    # Insert insn 3 code (register C field)
	    # b15=8/0, b8=1/0 (their respective hex values in the objdump)
	    regexp "^(.*)@I3\\+(.)(.)@(.*)$" $line junk leftpart b15 b8 rightpart
	    set n [expr ($icode << 1) + ($b15 << 4) + ($b8 << 0)]
	    set n [format "%02x" $n]
	    puts $out_fd "$leftpart$n$rightpart"
	} else {
	    puts $out_fd $line
	}
    }

    close $in_fd
    close $out_fd

    # Finally, run the test.

    run_dump_test $objdir/$opcode
}

# Run the tests.

if [istarget arc*-*-*] then {

    test_template_insn math adc 9
    test_template_insn math add 8
    test_template_insn math and 12
    test_template_insn math bic 14
    test_template_insn math or 13
    test_template_insn math sbc 11
    test_template_insn math sub 10
    test_template_insn math xor 15

    test_template_insn alias mov 12
    test_template_insn alias rlc 9
    test_template_insn alias asl 8
# `lsl' gets dumped as `asl' so this must be tested elsewhere.
#   test_template_insn alias lsl 8

    test_template_insn sshift asr 1
    test_template_insn sshift lsr 2
    test_template_insn sshift ror 3
    test_template_insn sshift rrc 4

    test_template_insn branch b 4
    test_template_insn branch bl 5
    test_template_insn branch lp 6

    run_dump_test "j"

#    test_special "ext" 3
#    test_special "sex" 3

    run_dump_test "flag"
#    run_dump_test "ld"
#    run_dump_test "lr"
#    run_dump_test "nop"
#    run_dump_test "st"
#    run_dump_test "sr"

}
