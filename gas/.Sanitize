# .Sanitize for devo/gas

# Each directory to survive its way into a release will need a file
# like this one called "./.Sanitize".  All keyword lines must exist,
# and must exist in the order specified by this file.  Each directory
# in the tree will be processed, top down, in the following order.

# Hash started lines like this one are comments and will be deleted
# before anything else is done.  Blank lines will also be squashed
# out.

# The lines between the "Do-first:" line and the "Things-to-keep:"
# line are executed as a /bin/sh shell script before anything else is
# done in this 

Do-first:

if ( echo $* | grep keep\-mpw > /dev/null ) ; then
	keep_these_too="mpw-config.in mpw-build.in mpw-make.in ChangeLog.mpw"
else
	lose_these_too="mpw-config.in mpw-build.in mpw-make.in ChangeLog.mpw"
fi

if ( echo $* | grep keep\-gm > /dev/null ) ; then
	keep_these_too="mpw-xconfig.in ChangeLog.gm ${keep_these_too}"
else
	lose_these_too="mpw-xconfig.in ChangeLog.gm ${lose_these_too}"
fi

# All files listed between the "Things-to-keep:" line and the
# "Files-to-sed:" line will be kept.  All other files will be removed.
# Directories listed in this section will have their own Sanitize
# called.  Directories not listed will be removed in their entirety
# with rm -rf.

Things-to-keep:

.gdbinit
CONTRIBUTORS
COPYING
ChangeLog
ChangeLog.v9
Makefile.in
NEWS
NOTES
NOTES.config
README
README-quirks
README-vms
README.coff
README.rich
app.c
as.c
as.h
atof-generic.c
bignum-copy.c
bignum.h
bit_fix.h
cond.c
config
config-gas.com
configure.bat
configure.in
debug.c
doc
ecoff.c
ecoff.h
expr.c
expr.h
flonum-copy.c
flonum-konst.c
flonum-mult.c
flonum.h
frags.c
frags.h
gasp.c
hash.c
hash.h
hex-value.c
input-file.c
input-file.h
input-scrub.c
link.cmd
listing.c
listing.h
literal.c
make-gas.com
messages.c
obj.h
output-file.c
output-file.h
read.c
read.h
stabs.c
struc-symbol.h
subsegs.c
subsegs.h
symbols.c
symbols.h
tc.h
testsuite
write.c
write.h
xmalloc.c

Things-to-lose:

Do-last:

if ( echo $* | grep keep-v9 > /dev/null ) ; then
	if [ -n "${verbose}" ] ; then
		echo Keeping `pwd`/ChangeLog.v9.
		echo Keeping v9 code in `pwd`/configure.in.
	fi
else
	if [ -n "${verbose}" ] ; then
		echo Removing `pwd`/ChangeLog.v9
	fi
	if [ -n "${safe}" ] ; then
		mv ChangeLog.v9 .Recover
	else
		rm ChangeLog.v9
	fi
	if [ -n "${verbose}" ] ; then
		echo Cleaning v9 code from `pwd`/configure.in.
	fi
	grep -v v9 < configure.in > new
	if [ -n "${safe}" ]; then
		mv configure.in .Recover
	fi
	mv -f new configure.in
fi


#
# End of file.
