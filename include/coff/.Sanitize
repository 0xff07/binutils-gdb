# Sanitize.in for include/coff.

# Each directory to survive it's way into a release will need a file
# like this one called "./.Sanitize".  All keyword lines must exist,
# and must exist in the order specified by this file.  Each directory
# in the tree will be processed, top down, in the following order.

# Hash started lines like this one are comments and will be deleted
# before anything else is done.  Blank lines will also be squashed
# out.

# The lines between the "Do-first:" line and the "Things-to-keep:"
# line are executed as a /bin/sh shell script before anything else is
# done in this 

Do-first:

tic80_files="tic80.h"

if ( echo $* | grep keep\-tic80 > /dev/null ) ; then
	keep_these_too="${tic80_files} ${keep_these_too}"
else
	lose_these_too="${tic80_files} ${lose_these_too}"
fi

# All files listed between the "Things-to-keep:" line and the
# "Files-to-sed:" line will be kept.  All other files will be removed.
# Directories listed in this section will have their own Sanitize
# called.  Directories not listed will be removed in their entirety
# with rm -rf.

Things-to-keep:

ChangeLog
a29k.h
alpha.h
apollo.h
arm.h
aux-coff.h
ecoff.h
go32exe.h
h8300.h
h8500.h
i386.h
i860.h
i960.h
internal.h
m68k.h
m88k.h
mips.h
pe.h
powerpc.h
rs6000.h
sh.h
sparc.h
sym.h
symconst.h
w65.h
we32k.h
z8k.h

Things-to-lose:


Do-last:

tic80_files="ChangeLog internal.h"
if ( echo $* | grep keep\-tic80 > /dev/null ) ; then
	for i in $tic80_files ; do
		if test ! -d $i && (grep sanitize-tic80 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping tic80 stuff in $i
			fi
		fi
	done
else
	for i in $tic80_files ; do
		if test ! -d $i && (grep sanitize-tic80 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"tic80\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-tic80/,/end-\sanitize\-tic80/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

# End of file.
