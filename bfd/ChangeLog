Tue Nov 30 16:45:23 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

	* irix-core.c: New file for Irix 4 and Irix 5 core support.
	Functions taken out of coff-mips.c.  Handle vmap type VMAPFILE.
	* coff-mips.c: Irix 4 core file support moved to irix-core.c.
	* targets.c: If IRIX_CORE defined, include irix_core_vec in
	target_vector.
	* config/irix4.mh (HDEFINES): Add -DIRIX_CORE.
	(HDEPFILES): Define to be irix-core.o.
	* config/irix5.mh (HDEFINES): Define to be -DIRIX_CORE.
	(HDEPFILES): Define to be irix-core.o.
	* Makefile.in (OPTIONAL_BACKENDS): Added irix-core.o.  Removed
	sco-core.o, which no longer exists.
	(CFILES): Added all *-core.c files.
	Rebuilt dependencies.

Wed Nov 24 02:02:41 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

	* elfcode.h (map_program_segments): Restore check of file_size !=
	mem_size, but only if SHT_PROGBITS.

	* ecofflink.c: New file to hold ECOFF debug information linking
	routines.
	* ecoff.c (ecoff_clear_output_flags, ecoff_rel, ecoff_dump_seclet,
	ecoff_add_string, ecoff_get_debug): Removed.  Functionality now in
	ecofflink.c.
	(ecoff_get_extr, ecoff_set_index): New functions.
	(ecoff_slurp_symbolic_info): Don't save raw_size.
	(ecoff_bfd_seclet_link): Rewrote to use ecofflink.c functions.
	(ecoff_compute_section_file_positions): Don't set EXEC_P just
	because there is a start address.
	(ecoff_write_object_contents): Handle external symbols here.  Use
	ecofflink.c functions to write out debugging information.
	* elf32-mips.c (mips_elf_read_ecoff_info, mips_elf_get_extr,
	mips_elf_set_index): New functions.
	(mips_elf_seclet_link): Discard empty sections, the .options
	section and .gptab sections.  Handle linking .mdebug section.
	* libecoff.h (ecoff_data_type): Removed raw_size and ifdbase.
	* libelf.h (elf_symbol_type): Added mips_extr to tc_data union.
	* bfd-in.h: Added prototypes for routines in ecofflink.c (some are
	called by gas, so they are public).
	* bfd-in2.h: Rebuilt.
	* Makefile.in (BFD_LIBS): Added ecofflink.o.
	(CFILES): Added ecofflink.c.
	(ecofflink.o): New target.  Rebuilt dependencies.

Mon Nov 22 22:26:42 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* som.c (hppa_object_p): Also recognize SHARED_MAGIC_CNX as
	a valid magic number if it's been defined.

Mon Nov 22 14:17:36 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

	* ecoff.c (ecoff_mkobject): Don't create .scommon section; linker
	no longer requires it.
	(ecoff_bfd_seclet_link, ecoff_sizeof_headers,
	ecoff_write_object_contents): Don't treat .scommon section
	specially.

Mon Nov 22 10:54:27 1993  Fred Fish  (fnf@cygnus.com)

	Merged changes from kev@spuds.geg.mot.com (Kevin A. Buettner):
	* bfd/config/delta88.mh (HDEFINES): Define this to be -DPTRACE_CORE.
	* bfd/config/delta88.mh (HDEPFILES): Defined to be ptrace-core.o.
	* bfd/ptrace-core.c:  New file for dealing with core files with
	start with the ptrace_user structure found on BCS compliant systems.
	* bfd/targets.c (ptrace_core_vec):  New vector.

Mon Nov 22 02:33:12 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* Minimal support for reading SOM fixup streams.  Allows
	objdump -r to do something reasonable.
	* som.c (som_get_reloc_upper_bound): Implement.
	(som_canonicalize_reloc): Implement.
	(som_set_reloc_info, som_slurp_reloc_table): New functions.

Sun Nov 21 13:46:55 1993  Ken Raeburn  (raeburn@cambridge.cygnus.com)

	* hosts/lynx.h (FPRINTF_ALREADY_DECLARED): Define.
	* hosts/sparclynx.h: Include lynx.h instead of duplicating it.

Fri Nov 19 14:34:04 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

	* coff-a29k.c (a29k_reloc): For R_IREL, don't left shift
	signed_value before sign extending it.  Don't subtract out
	reloc_entry->address.  This makes it compatible with what gas is
	generating.

	* elfcode.h (elf_fake_sections): Accept .sbss as the name for a
	SHT_NOBITS sections.
	(map_program_segments): Don't leave the loop after the first
	SHT_NOBITS section.
	(assign_file_positions_except_relocs): Only force sh_offset and
	sh_addr to match modulo maxpagesize for a section which is not
	SHT_NOBITS.  Changed the method used to force page alignment after
	a SHT_NOBITS section to only do it for the last such consecutive
	section, and to really force page alignment.

Fri Nov 19 04:02:01 1993  Ken Raeburn  (raeburn@cambridge.cygnus.com)

	* coffcode.h (coff_slurp_symbol_table): Print more verbose message
	in the case of an unknown (or unhandled) storage class.

	* config/i386-lynx.mt (TDEFINES): FPRINTF_ALREADY_DECLARED should
	not be defined here, since it is a host attribute, not a target
	one.
	* config/m68k-lynx.mt, config/sparc-lynx.mt: Ditto.

	* coffcode.h (coff_bfd_reloc_type_lookup): Don't define if already
	defined.

	* coff-sparc.c: Define some relocations, based on ELF relocations.
	(enum reloc_type, bfd_coff_generic_reloc, coff_sparc_howto_table,
	struct coff_reloc_map, sparc_reloc_map,
	coff_sparc_reloc_type_lookup): Borrowed from elf32-sparc.c and
	elf.c, renamed.
	(coff_bfd_reloc_type_lookup): Define to be coff_sparc_reloc_....
	(rtype2howto): Index into coff_sparc_howto_table using
	dst->r_type.

Thu Nov 18 11:45:39 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

	* config.bfd (mips*-*-irix5*): New target; use mipsbelf.
	* configure.host (mips-sgi-irix5*) New host; use irix5 (no
	hosts/irix5.h created; just use std-host.h).
	* config/irix5.mh: New file; like irix4.mh, but don't use -G or
	-lmalloc.
	* Makefile.in: Rebuilt dependencies.

	* ecoffswap.h: Changed type of internal pointers for swap out
	functions to const *.

	* elf32-mips.c (mips_elf_got16_reloc): New function.  Handle GOT16
	correctly for assembler, but linker support not implemented.
	(elf_mips_howto_table): Use mips_elf_got16_reloc for GOT16.
	(mips_elf_sym_is_global): New function; at least on Irix 5, all
	non section symbols are considered global.
	(elf_backend_sym_is_global): Define.
	(mips_elf_final_write_processing): New function.  Set the MIPS
	architecture level correctly.
	(elf_backend_final_write_processing): Define.
	(mips_elf_section_from_shdr): Handle SHT_MIPS_OPTIONS.
	(mips_elf_fake_sections): Set entsize of .mdebug or .reginfo
	section to 1.  Handle .options section.
	(mips_elf_acom_section, mips_elf_acom_symbol,
	mips_elf_acom_symbol_ptr): New static variables, used to build a
	generic .acommon section to hold SHN_MIPS_ACOMMON symbols.
	(mips_elf_symbol_processing): Handle SHN_MIPS_ACOMMON symbols by
	putting them all in a global .acommon section.

	* elfcode.h (bfd_section_from_shdr): Don't dump core if target
	section has no ELF section data.
	(elf_make_sections): Set addralign of reloc section to 4.
	(elf_fake_sections): Likewise.
	(map_program_segments):	Don't consider section 0.
	(assign_file_positions_except_relocs): Don't consider section 0.
	In the main loop, skip the symtab and strtab sections, since their
	positions are set elsewhere.
	(swap_out_syms): Set addralign of symtab section to 4.  Set
	addralign of strtab sections to 1.
	(assign_file_positions_for_relocs): Don't consider section 0.
	(write_object_contents): Don't write out section 0.

	* libelf.h (struct elf_backend_data): Added fields
	elf_backend_sym_is_global and elf_backend_final_write_processing.
	* elf32-target.h (elf32_bed): Added corresponding initializers.
	* elf64-target.h (elf64_bed): Likewise.
	* elfcode.h (sym_is_global): Take abfd argument.  Call
	elf_backend_sym_is_global if it is not NULL.
	(elf_map_symbols): Pass abfd to sym_is_global.
	(write_object_contents): Call elf_backend_final_write_processing
	if it is defined.

Wed Nov 17 18:43:28 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

	* libecoff.h: Include coff/ecoff.h.
	(struct ecoff_backend_data): Move external debugging information
	fields into a single field pointing to an ecoff_debug_swap
	structure.
	(ecoff_data_type): Move debugging information fields into a single
	field pointing to an ecoff_debug_info structure.
	* coff-alpha.c, coff-mips.c, ecoff.c: Corresponding changes.

Wed Nov 17 13:56:10 1993  Stan Shebs  (shebs@rtl.cygnus.com)

	* i386lynx.c (swap_std_reloc_in, swap_ext_reloc_in): Ignore
	garbage bits appearing in the upper end of symbolnums.

	* config/sparc-lynx.mt (TDEFINES): Add -DFPRINTF_ALREADY_DECLARED.

Tue Nov 16 17:03:41 1993  Stu Grossman  (grossman at cygnus.com)

	* lynx-core.c (lynx_core_file_p):  Change bfd_zalloc to bfd_alloc.
	* m68klynx.c:  Define core file macros.
	* hosts/i386lynx.h, hosts/m68klynx.h, hosts/lynx.h:  Move all
	non-architecture specific stuff into lynx.h.

Tue Nov 16 15:45:54 1993  Jim Kingdon  (kingdon@lioth.cygnus.com)

	* i386linux.c: Define new macro ZMAGIC_DISK_BLOCK_SIZE to 1024, and
	change PAGE_SIZE to 4096.

Mon Nov 15 11:48:08 1993  Ken Raeburn  (raeburn@rtl.cygnus.com)

	* Makefile.in (diststuff): New target.

	* VERSION: Updated.

Sun Nov 14 23:33:01 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* som.c (som_object_setup): Do not create dummy ".text", ".data",
	and ".bss" sections.
	(setup_sections): Do not set SEC_HAS_CONTENTS if a section's size
	is zero.  Recognize BSS type sections and turn off SEC_LOAD and
	SEC_DATA (so binutils/size works).  Set the correct value for
	a section's _raw_size.
	(som_slurp_symbol_table): Program entry points, and millicode are
	also functions.  Mark them as such.  Also mark L$* symbols as
	debugging symbols.

	* bfd-in2.h: Rebuilt.

Sat Nov 13 15:27:15 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* som.c (som_bfd_reloc_type_lookup): Add missing prototype.  Returns
	a pointer to constant data.  Delete bogus #define which made the 
	function useless.

	* som.c (som_prep_for_fixups): New function.
	(som_write_fixups): New function.
	(som_write_space_strings): New function.
	(som_write_symbol_strings): New function.
	(som_begin_writing): New function.

Fri Nov 12 15:29:36 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* som.c (som_write_object_contents): Do not abort.  Flesh out.
	(som_set_section_contents): Do not abort.  Flesh out.

	* som.c (som_write_headers): New function.
	(som_prep_headers): New function.
	(som_build_and_write_symbol_table): New function.

	* som.c (som_sizeof_headers): Add missing prototype.
	(som_set_arch_mach): Do not abort.

	* som.c (som_count_spaces): New function.
	(som_count_subspaces): New function.
	(compare_syms): New function.
	(som_compute_checksum): New function.

	* som.c (hppa_som_gen_reloc_type): New function.
	(som_bfd_reloc_type_lookup): New function.

	* som.c (try_prev_fixup): New function.
	(som_reloc_skip): New function.
	(som_reloc_addend): New function.
	(som_reloc_call): New function.

	* som.c (som_initialize_reloc_queue): New function.
	(som_reloc_queue_insert): Likewise.
	(som_reloc_queue_fix): Likewise.
	(som_reloc_queue_find): Likewise.

	* som.c (som_hppa_howto_table): SOM howto relocation table.
	(hppa_som_reloc): New function.

	* som.c (struct reloc_queue): New structure to keep track of
	the last four multibyte relocations emitted.
	(enum pa_symbol_type): Type to fully describe the symbol types
	associated with .import/.export assembler directives.

	* som.c: Include libhppa.h

	* som.c (bfd_som_set_section_attributes): New function.
	(bfd_som_set_subsection_attributes): Likewise.
	(bfd_som_set_symboL_type): Likewise.
	(bfd_som_attach_unwind_info): Likewise.
	* som.h: Declare new exported functions.

	* som.h (struct som_symbol): Add new fields to hold additional
	information needed to build/write symbol tables and fixup streams.
	(struct som_section_data_struct): Add new fields to hold additional
	information needed to build/write space and subspace headers.
	(som_symbol_data): New accessor macro for SOM symbol information.
	(R_HPPA_*): Basic relocation types to be used by the assembler.

Fri Nov 12 11:00:28 1993  Jim Kingdon  (kingdon@lioth.cygnus.com)

	* trad-core.c (trad_unix_core_file_p): If new hook
	TRAD_CORE_ALLOW_ANY_EXTRA_SIZE defined, then skip the check for the
	corefile being too big.
	* hosts/i386sco.h: Define it.

Thu Nov 11 15:16:28 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* bfd.c (struct _bfd): Add hppabsd_core_data.
	* targets.c (target_vector): Add hppabsd_core_vec.
	* hpux-core.c (hpux_core_core_file_p): Fail if an unknown core
	section is encountered during core section scanning.
	* hppabsd-core.c: New file.
	* config/hppabsd.mh: Enable HPPA BSD core files.

	* elf32-hppa.c (hppa_elf_reloc): Remove DEFUN crud.  Remove code
	which is either commented out or ifdef'd out.  Add, update and
	clean comments.  Fix various indention and spacing problems.  Handle
	problems related to using "ble" to jump to a stub rather than "bl"
	(%r31 is trashed by "ble", but not by "bl").
	(NEW_INSTRUCTION): Put inside curly braces.
	(CURRENT_STUB_OFFSET): Fix indention problems.
	(hppa_elf_build_arg_reloc_stub): Fix indention and spacing problems.
	Add, update and clean comments.  Handle "ble" %r31 lossage problems.
	(hppa_elf_build_long_branch_stub): Likewise.
	(hppa_look_for_stubs_in_section): Likewise.
	(hppa_elf_stub_check): Remove obsolete function.

	* hppa_stubs.h: Add new instructions to deal with %r31 lossage
	problems.  Delete unused instructions.
	
Tue Nov  9 11:40:27 1993  Stan Shebs  (shebs@rtl.cygnus.com)

	* m68klynx.c (TARGET_IS_BIG_ENDIAN_P): Define.

Tue Nov  9 11:26:05 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

	* elfcode.h (elf_object_p): Rather than looking through an array
	of architectures, get the ELF EM_xxx code from the backend
	information.  Let the generic ELF target match any EM_xxx code not
	matched by another ELF target.  Call elf_backend_object_p to let
	the backend do more checks and set global information.
	* libelf.h (struct elf_backend_data): Added elf_machine_code and
	elf_backend_object_p fields.
	(struct bfd_elf_arch_map): Removed.
	(bfd_elf_arch_map, bfd_elf_arch_map_size): Don't declare.
	* elf32-target.h, elf64-target.h: Initialize elf_machine_code
	field with ELF_MACHINE_CODE.  Initialize elf_backend_object_p
	field with elf_backend_object_p (if it is defined).
	* elf32-gen.c, elf32-hppa.c, elf32-i386.c, elf32-i860.c,
	elf32-m68k.c, elf32-m88k.c, elf32-mips.c, elf32-sparc.c,
	elf64-gen.c (ELF_MACHINE_CODE): Defined.
	* elf32-mips.c: Include ecoffswap.h to get ECOFF swapping
	routines.
	(mips_elf_object_p): Set the right machine number.
	(mips_elf_ecoff_debug_swap): Defined.
	(elf_backend_object_p): Defined to be mips_elf_object_p.
	(elf_backend_ecoff_debug_swap): Defined to be
	mips_elf_ecoff_debug_swap.
	* elf.c (bfd_elf_arch_map, bfd_elf_arch_map_size): Removed.

	* libbfd-in.h (target_vector, default_vector): Declare.
	* libbfd.h: Rebuilt.
	* format.c (target_vector, default_vector): Don't declare.

	* elf32-mips.c (elf_mips_howto_table): Don't complain on overflow
	for R_MIPS_26.  Correct overflow detection requires matching the
	upper four bits of the destination against the PC.  From Ted Lemon
	<mellon@pepper.ncd.com>.

	* bout.c (b_out_reloc_type_lookup): Return type should point to
	const data.
	* coff-i960.c (coff_i960_reloc_type_lookup): Likewise.
	* elf32-hppa.c (elf_hppa_reloc_type_lookup): Likewise.
	* mipsbsd.c (MY(reloc_howto_type_lookup)): Likewise.
	* coff-i386.c (coff_i386_reloc): Made howto const.
	* oasys.c (oasys_write_data): Made how const.

	* libelf.h: Added some comments.
	(struct elf_backend_data): Added elf_backend_ecoff_debug_swap
	field.  Removed unused write_relocs field.
	* elf32-target.h: Adjusted elf_backend_data initialization
	accordingly.
	* elf64-target.h: Corrected elf_backend_data initialization to
	fill in all fields and to set elf_64_p to 1.

Mon Nov  8 18:13:14 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

	* elfcode.h (bfd_section_from_shdr): Remove duplicate assignment
	to filepos in SHT_STRTAB case.
	(assign_file_position_for_section): Set BFD section filepos as
	well as ELF section sh_offset.

	* reloc.c: Use const instead of CONST.
	(bfd_perform_relocation): Make variable howto a const pointer.
	* bfd-in2.h, libbfd.h: Rebuilt.

Mon Nov  8 12:19:15 1993  Jim Kingdon  (kingdon@lioth.cygnus.com)

	* Makefile.in (realclean): Don't remove generated headers.  Reverts
	change of 2 Jul 1993.

Mon Nov  8 06:08:31 1993  D. V. Henkel-Wallace  (gumby@cirdan.cygnus.com)

	* configure.bfd: make unixware equivalent to sysv4.

	* config/i386-nlm.mt: bring in elf config; make it the default.

Sun Nov  7 20:21:38 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* libbfd.c (bfd_put_8): Add parens around reference to "val"
	argument.

Fri Nov  5 21:45:09 1993  David J. Mackenzie  (djm@thepub.cygnus.com)

	* hosts/i386mach3.h (HOST_SEGMENT_SIZE),
	i386mach3.c (SEGMENT_SIZE, TEXT_START_ADDR): Correct values (?).

Fri Nov  5 15:17:57 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

	* coffcode.h (coff_write_object_contents): Zero out internal_a.

Fri Nov  5 10:41:07 1993  David J. Mackenzie  (djm@thepub.cygnus.com)

	* aoutx.h, archive.c, archures.c, bfd.c, cache.c, coffcode.h,
	core.c, ctor.c, format.c, init.c, libbfd.c, opncls.c, reloc.c,
	section.c, syms.c, targets.c:
	Doc cleanup (spelling, punctuation, grammar, formatting).
	* bfd-in2.h, libbfd.h: Rebuild.

Thu Nov  4 14:46:14 1993  John Gilmore  (gnu@rtl.cygnus.com)

	* bfd-in.h (bfd_get_cacheable, bfd_set_cacheable):  New accessors.
	* bfd.c, opncls.c:  Improve comments on file descriptor cacheing.

Thu Nov  4 08:54:30 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)

	* From Pete Hoogenboom (hoogen@cs.utah.edu)
	* elf32-hppa.c (hppa_elf_get_section_contents): Fix logic error
	in last change.  Always rebuild symbol extension section the first
	time though if output sections exist (fixes ld -r problems).

Thu Nov 04 08:08:46 1993  Jeffrey Wheat  (cassidy@cygnus.com)

	* Makefile.in: Add .PHONY for check and installcheck rules.

Tue Nov  2 14:42:27 1993  Bill Cox (bill@tarkas.cygnus.com)

	* libbfd-in.h (artdata): Use long, not time_t for portability, at
	  least to HPUX.  File below is a derived file.

Tue Nov  2 14:42:27 1993  Bill Cox (bill@tarkas.cygnus.com)

	* libbfd.h (artdata): Use long, not time_t for portability, at
	  least to HPUX.

Tue Nov  2 09:32:25 1993  Jim Kingdon  (kingdon@lioth.cygnus.com)

	* config.bfd: Use bigmips for mips*-*-bsd*.

Mon Nov  1 14:30:09 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)

	* elfcode.h (elf_slurp_reloca_table, elf_slurp_reloc_table):
	Handle symbol number of zero.

	* reloc.c (enum bfd_reloc_code_real): Added
	BFD_RELOC_MIPS_LITERAL, BFD_RELOC_MIPS_GOT16,
	BFD_RELOC_MIPS_CALL16, BFD_RELOC_MIPS_GPREL32.
	* bfd-in2.h: Rebuilt.
	* coff-mips.c (mips_bfd_reloc_type_lookup): Handle
	BFD_RELOC_MIPS_LITERAL.
	* elf32-mips.c (mips_reloc_map): Handle new relocs.
	(mips_elf_hi16_reloc, mips_elf_lo16_reloc): Rearrange _gp_disp
	checks slightly.

	* aout-target.h (MY_bfd_debug_info_start, MY_bfd_debug_info_end,
	MY_bfd_debug_info_accumulat [sic]): Remove unused definitions.
	(MY_bfd_get_relocated_section_contents, MY_bfd_relax_section,
	MY_bfd_seclet_link): Define.
	(MY_bfd_reloc_type_lookup): Rename from
	MY_reloc_howto_type_lookup.
	(MY_bfd_make_debug_symbol): Rename from MY_make_debug_symbol.
	(MY(vec)): Use JUMP_TABLE rather than listing functions.
	* hp300hpux.c (MY_get_symtab, MY_get_symtab_upper_bound,
	MY_canonicalize_reloc, MY_write_object_contents): Don't define in
	terms of MY, because that causes a recusive invocation of CAT when
	expanded within JUMP_TABLE, and ANSI compilers don't expand
	recursive macros.
	* mipsbsd.c (MY_bfd_reloc_type_lookup): Rename from
	MY_reloc_howto_type_lookup, and don't define in terms of MY.
	(MY_canonicalize_reloc): Don't define in terms of MY.
	(aout_mips_little_vec, aout_mips_big_vec): Use JUMP_TABLE rather
	than listing functions.

Mon Nov  1 09:12:25 1993  Jim Kingdon  (kingdon@lioth.cygnus.com)

	* config.bfd: Use m68k-elf for m68*-*-sysv4*.

See file ChangeLog.1


Local Variables:
mode: indented-text
left-margin: 8
fill-column: 74
version-control: never
End:
