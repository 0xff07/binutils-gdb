# .Sanitize for devo/bfd

# Each directory to survive its way into a release will need a file
# like this one called "./.Sanitize".  All keyword lines must exist,
# and must exist in the order specified by this file.  Each directory
# in the tree will be processed, top down, in the following order.

# Hash started lines like this one are comments and will be deleted
# before anything else is done.  Blank lines will also be squashed
# out.

# The lines between the "Do-first:" line and the "Things-to-keep:"
# line are executed as a /bin/sh shell script before anything else is
# done in this directory.

Do-first:

tic80_files="cpu-tic80.c coff-tic80.c"

if ( echo $* | grep keep\-tic80 > /dev/null ) ; then
	keep_these_too="${tic80_files} ${keep_these_too}"
else
	lose_these_too="${tic80_files} ${lose_these_too}"
fi

armelf_files="elf32-arm.c"
if ( echo $* | grep keep\-armelf > /dev/null ) ; then
	keep_these_too="${armelf_files} ${keep_these_too}"
else
	lose_these_too="${armelf_files} ${lose_these_too}"
fi


# All files listed between the "Things-to-keep:" line and the
# "Do-last:" line will be kept.  All other files will be removed.
# Directories listed in this section will have their own Sanitize
# called.  Directories not listed will be removed in their entirety
# with rm -rf.

Things-to-keep:

COPYING
ChangeLog
ChangeLog-9193
ChangeLog-9495
ChangeLog-9697
Makefile.am
Makefile.in
PORTING
README
TODO
acconfig.h
acinclude.m4
aclocal.m4
aix386-core.c
aout-adobe.c
aout-arm.c
aout-encap.c
aout-ns32k.c
aout-sparcle.c
aout-target.h
aout-tic30.c
aout0.c
aout32.c
aout64.c
aoutf1.h
aoutx.h
archive.c
archures.c
bfd-in.h
bfd-in2.h
bfd.c
binary.c
bout.c
cache.c
cf-i386lynx.c
cf-m68klynx.c
cf-sparclynx.c
cisco-core.c
coff-a29k.c
coff-alpha.c
coff-apollo.c
coff-arm.c
coff-aux.c
coff-go32.c
coff-h8300.c
coff-h8500.c
coff-i386.c
coff-i860.c
coff-i960.c
coff-m68k.c
coff-m88k.c
coff-mips.c
coff-pmac.c
coff-ppc.c
coff-rs6000.c
coff-sh.c
coff-sparc.c
coff-stgo32.c
coff-svm68k.c
coff-tic30.c
coff-u68k.c
coff-w65.c
coff-we32k.c
coff-z8k.c
coffcode.h
coffgen.c
cofflink.c
coffswap.h
config.bfd
config.in
configure
configure.bat
configure.com
configure.host
configure.in
corefile.c
cpu-a29k.c
cpu-alpha.c
cpu-arc.c
cpu-arm.c
cpu-d10v.c
cpu-d30v.c
cpu-h8300.c
cpu-h8500.c
cpu-hppa.c
cpu-i386.c
cpu-i860.c
cpu-i960.c
cpu-m10200.c
cpu-m10300.c
cpu-m32r.c
cpu-m68k.c
cpu-m88k.c
cpu-mips.c
cpu-ns32k.c
cpu-powerpc.c
cpu-rs6000.c
cpu-sh.c
cpu-sparc.c
cpu-tic30.c
cpu-v850.c
cpu-vax.c
cpu-w65.c
cpu-we32k.c
cpu-z8k.c
demo64.c
dep-in.sed
doc
dwarf2.c
ecoff.c
ecofflink.c
ecoffswap.h
elf-bfd.h
elf-m10200.c
elf-m10300.c
elf.c
elf32-arc.c
elf32-d10v.c
elf32-d30v.c
elf32-gen.c
elf32-hppa.c
elf32-hppa.h
elf32-i386.c
elf32-i860.c
elf32-m32r.c
elf32-m68k.c
elf32-m88k.c
elf32-mips.c
elf32-ppc.c
elf32-sh.c
elf32-sparc.c
elf32-v850.c
elf32.c
elf64-alpha.c
elf64-gen.c
elf64-mips.c
elf64-sparc.c
elf64.c
elfcode.h
elfcore.h
elflink.c
elflink.h
elfxx-target.h
format.c
freebsd.h
gen-aout.c
genlink.h
go32stub.h
hash.c
host-aout.c
hosts
hp300bsd.c
hp300hpux.c
hppa_stubs.h
hppabsd-core.c
hpux-core.c
i386aout.c
i386bsd.c
i386dynix.c
i386freebsd.c
i386linux.c
i386lynx.c
i386mach3.c
i386msdos.c
i386netbsd.c
i386os9k.c
ieee.c
ihex.c
init.c
irix-core.c
libaout.h
libbfd-in.h
libbfd.c
libbfd.h
libcoff-in.h
libcoff.h
libecoff.h
libhppa.h
libieee.h
libnlm.h
liboasys.h
linker.c
lynx-core.c
m68k4knetbsd.c
m68klinux.c
m68klynx.c
m68knetbsd.c
m88kmach3.c
makefile.dos
makefile.vms
mipsbsd.c
mpw-config.in
mpw-make.sed
netbsd-core.c
netbsd.h
newsos3.c
nlm-target.h
nlm.c
nlm32-alpha.c
nlm32-i386.c
nlm32-ppc.c
nlm32-sparc.c
nlm32.c
nlm64.c
nlmcode.h
nlmswap.h
ns32k.h
ns32knetbsd.c
oasys.c
opncls.c
osf-core.c
pc532-mach.c
pe-arm.c
pe-i386.c
pe-ppc.c
pei-arm.c
pei-i386.c
pei-ppc.c
peicode.h
po
ppcboot.c
ptrace-core.c
reloc.c
reloc16.c
riscix.c
rs6000-core.c
section.c
som.c
som.h
sparclinux.c
sparclynx.c
sparcnetbsd.c
srec.c
stab-syms.c
stabs.c
stamp-h.in
sunos.c
syms.c
sysdep.h
targets.c
targmatch.sed
tekhex.c
trad-core.c
vaxnetbsd.c
versados.c
vms.c
vms.h
vms-gsd.c
vms-hdr.c
vms-misc.c
vms-tir.c
xcofflink.c

Things-to-lose:



# The lines between the "Do-last:" line and the end of the file
# are executed as a /bin/sh shell script after everything else is
# done.

Do-last:

am33_files="ChangeLog archures.c bfd-in2.h cpu-m10300.c elf-m10300.c"
if ( echo $* | grep keep\-am33 > /dev/null ) ; then
	for i in $am33_files ; do
		if test ! -d $i && (grep sanitize-am33 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping am33 stuff in $i
			fi
		fi
	done
else
	for i in $am33_files ; do
		if test ! -d $i && (grep sanitize-am33 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"am33\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-am33/,/end-\sanitize\-am33/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

v850_files="ChangeLog ChangeLog-9697 Makefile.in Makefile.am archures.c reloc.c targets.c config.bfd configure.in configure bfd-in2.h elf.c libbfd.h elf32-v850.c cpu-v850.c"
if ( echo $* | grep keep\-v850e > /dev/null ) ; then
	for i in $v850_files ; do
		if test -r $i && (grep sanitize-v850e $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping v850e stuff in $i
			fi
		fi
	done
else
	for i in $v850_files ; do
		if test -f $i && (grep sanitize-v850e $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"v850e\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-v850e/,/end\-sanitize\-v850e/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

r5900_files="ChangeLog ChangeLog-9697 config.bfd archures.c bfd-in2.h cpu-mips.c elf32-mips.c libbfd.h reloc.c"
if ( echo $* | grep keep\-r5900 > /dev/null ) ; then
	for i in $r5900_files ; do
		if test ! -d $i && (grep sanitize-r5900 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping r5900 stuff in $i
			fi
		fi
	done
else
	for i in $r5900_files ; do
		if test ! -d $i && (grep sanitize-r5900 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"r5900\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-r5900/,/end-\sanitize\-r5900/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

tx19_files="archures.c bfd-in2.h cpu-mips.c"
if ( echo $* | grep keep\-tx19 > /dev/null ) ; then
	for i in $tx19_files ; do
		if test ! -d $i && (grep sanitize-tx19 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping tx19 stuff in $i
			fi
		fi
	done
else
	for i in $tx19_files ; do
		if test ! -d $i && (grep sanitize-tx19 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"tx19\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-tx19/,/end-\sanitize\-tx19/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

tx49_files="archures.c bfd-in2.h cpu-mips.c elf32-mips.c"
if ( echo $* | grep keep\-tx49 > /dev/null ) ; then
	for i in $tx49_files ; do
		if test ! -d $i && (grep sanitize-tx49 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping tx49 stuff in $i
			fi
		fi
	done
else
	for i in $tx49_files ; do
		if test ! -d $i && (grep sanitize-tx49 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"tx49\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-tx49/,/end-\sanitize\-tx49/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

tic80_files="ChangeLog ChangeLog-9697 Makefile.in Makefile.am archures.c bfd-in2.h config.bfd configure configure.in targets.c coffcode.h coffswap.h"
if ( echo $* | grep keep\-tic80 > /dev/null ) ; then
	for i in $tic80_files ; do
		if test ! -d $i && (grep sanitize-tic80 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping tic80 stuff in $i
			fi
		fi
	done
else
	for i in $tic80_files ; do
		if test ! -d $i && (grep sanitize-tic80 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"tic80\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-tic80/,/end-\sanitize\-tic80/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

vr5400_files="ChangeLog ChangeLog-9697 archures.c bfd-in2.h bfd-in.h cpu-mips.c elf32-mips.c"
if ( echo $* | grep keep\-vr5400 > /dev/null ) ; then
	for i in $vr5400_files ; do
		if test ! -d $i && (grep sanitize-vr5400 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping vr5400 stuff in $i
			fi
		fi
	done
else
	for i in $vr5400_files ; do
		if test ! -d $i && (grep sanitize-vr5400 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"vr5400\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-vr5400/,/end-\sanitize\-vr5400/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

vr4320_files="ChangeLog archures.c bfd-in2.h cpu-mips.c elf32-mips.c"
if ( echo $* | grep keep\-vr4320 > /dev/null ) ; then
	for i in $vr4320_files ; do
		if test ! -d $i && (grep sanitize-vr4320 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping vr4320 stuff in $i
			fi
		fi
	done
else
	for i in $vr4320_files ; do
		if test ! -d $i && (grep sanitize-vr4320 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"vr4320\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-vr4320/,/end-\sanitize\-vr4320/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

m32rx_files="ChangeLog ChangeLog-9697 archures.c bfd-in2.h elf32-m32r.c cpu-m32r.c"
if ( echo $* | grep keep\-m32rx > /dev/null ) ; then
	for i in $m32rx_files ; do
		if test -r $i && (grep sanitize-m32rx $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping m32rx stuff in $i
			fi
		fi
	done
else
	for i in $m32rx_files ; do
		if test -f $i && (grep sanitize-m32rx $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"m32rx\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-m32rx/,/end\-sanitize\-m32rx/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

sky_files="ChangeLog archures.c elf32-mips.c reloc.c cpu-mips.c config.bfd configure.in configure bfd-in2.h libbfd.h"
if ( echo $* | grep keep\-sky > /dev/null ) ; then
	for i in $sky_files ; do
		if test ! -d $i && (grep sanitize-sky $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping sky stuff in $i
			fi
		fi
	done
else
	for i in $sky_files ; do
		if test ! -d $i && (grep sanitize-sky $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"sky\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-sky/,/end-\sanitize\-sky/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

beos_files="ChangeLog config.bfd"
if ( echo $* | grep keep\-beos > /dev/null ) ; then
	for i in $beos_files ; do
		if test ! -d $i && (grep sanitize-beos $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping beos stuff in $i
			fi
		fi
	done
else
	for i in $beos_files ; do
		if test ! -d $i && (grep sanitize-beos $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"beos\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-beos/,/end-\sanitize\-beos/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

armelf_files="ChangeLog Makefile.am Makefile.in config.bfd configure configure.in elf.c targets.c"
if ( echo $* | grep keep\-armelf > /dev/null ) ; then
	for i in $armelf_files ; do
		if test ! -d $i && (grep sanitize-armelf $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping armelf stuff in $i
			fi
		fi
	done
else
	for i in $armelf_files ; do
		if test ! -d $i && (grep sanitize-armelf $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"armelf\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-armelf/,/end-\sanitize\-armelf/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

for i in * ; do
	if test ! -d $i && (grep sanitize $i > /dev/null) ; then
		echo '***' Some mentions of Sanitize are still left in $i! 1>&2
	fi
done


# This must come after all other sanitizations.  Re-sanitize the .pot
# file.
if [ -n "${verbose}" ]; then
   echo Re-computing files for gettext ...
fi

if [ -n "${safe}" -a ! -f po/.Recover/POTFILES.in ]; then
   if [ -n "${verbose}" ]; then
      echo Caching po/POTFILES.in in .Recover...
   fi
   mv po/POTFILES.in po/.Recover
fi
find . -name '*.[ch]' | sed -e 's,^\./,,' > po/POTFILES.in

if [ -n "${safe}" -a ! -f po/.Recover/bfd.pot ]; then
   if [ -n "${verbose}" ]; then
      echo Caching po/bfd.pot in .Recover...
   fi
   mv po/bfd.pot po/.Recover
fi
# If this fails, Sanitization must fail.
xgettext -c -k_ -kN_ -f po/POTFILES.in -o po/bfd.pot || exit 1

# eof
