# .Sanitize for devo/bfd.

# Each directory to survive its way into a release will need a file
# like this one called "./.Sanitize".  All keyword lines must exist,
# and must exist in the order specified by this file.  Each directory
# in the tree will be processed, top down, in the following order.

# Hash started lines like this one are comments and will be deleted
# before anything else is done.  Blank lines will also be squashed
# out.

# The lines between the "Do-first:" line and the "Things-to-keep:"
# line are executed as a /bin/sh shell script before anything else is
# done in this directory.

Do-first:

rce_files="cpu-rce.c aout-rce.c"

if ( echo $* | grep keep\-rce > /dev/null ) ; then
	keep_these_too="${rce_files} ${keep_these_too}"
else
	lose_these_too="${rce_files} ${lose_these_too}"
fi

arc_files="cpu-arc.c elf32-arc.c"

if ( echo $* | grep keep\-arc > /dev/null ) ; then
	keep_these_too="${arc_files} ${keep_these_too}"
else
	lose_these_too="${arc_files} ${lose_these_too}"
fi

# All files listed between the "Things-to-keep:" line and the
# "Files-to-sed:" line will be kept.  All other files will be removed.
# Directories listed in this section will have their own Sanitize
# called.  Directories not listed will be removed in their entirety
# with rm -rf.

Things-to-keep:

COPYING
ChangeLog
ChangeLog.1
Makefile.in
PORTING
TODO
VERSION
aix386-core.c
aout-adobe.c
aout-arm.c
aout-encap.c
aout-ns32k.c
aout-target.h
aout0.c
aout32.c
aout64.c
aoutf1.h
aoutx.h
archive.c
archures.c
bfd-in.h
bfd-in2.h
bfd.c
binary.c
bout.c
cache.c
cf-i386lynx.c
cf-m68klynx.c
cf-sparclynx.c
cisco-core.c
coff-a29k.c
coff-arm.c
coff-alpha.c
coff-apollo.c
coff-go32.c
coff-h8300.c
coff-h8500.c
coff-i386.c
coff-i960.c
coff-m68k.c
coff-m88k.c
coff-mips.c
coff-rs6000.c
coff-sh.c
coff-sparc.c
coff-u68k.c
coff-we32k.c
coff-w65.c
coff-z8k.c
coffcode.h
coffgen.c
cofflink.c
coffswap.h
config
config.bfd
configure.bat
configure.host
configure.in
core.c
cpu-a29k.c
cpu-alpha.c
cpu-arm.c
cpu-h8300.c
cpu-h8500.c
cpu-hppa.c
cpu-i386.c
cpu-i960.c
cpu-m68k.c
cpu-m88k.c
cpu-mips.c
cpu-ns32k.c
cpu-powerpc.c
cpu-rs6000.c
cpu-sh.c
cpu-sparc.c
cpu-vax.c
cpu-we32k.c
cpu-w65.c
cpu-z8k.c
demo64.c
dep-in.sed
doc
ecoff.c
ecofflink.c
ecoffswap.h
elf.c
elf32-gen.c
elf32-hppa.c
elf32-hppa.h
elf32-i386.c
elf32-i860.c
elf32-m68k.c
elf32-m88k.c
elf32-mips.c
elf32-ppc.c
elf32-sparc.c
elf32.c
elf64-gen.c
elf64-sparc.c
elf64.c
elfxx-target.h
elfcode.h
elfcore.h
elflink.c
elflink.h
filemode.c
format.c
gen-aout.c
genlink.h
hash.c
host-aout.c
hosts
hp300bsd.c
hp300hpux.c
hppa_stubs.h
hppabsd-core.c
hpux-core.c
i386aout.c
i386bsd.c
i386dynix.c
i386linux.c
i386netbsd.c
i386lynx.c
i386mach3.c
i386msdos.c
i386os9k.c
ieee.c
init.c
irix-core.c
libaout.h
libbfd-in.h
libbfd.c
libbfd.h
libcoff-in.h
libcoff.h
libecoff.h
libelf.h
libhppa.h
libieee.h
libnlm.h
liboasys.h
linker.c
lynx-core.c
m68klynx.c
m68knetbsd.c
m88kmach3.c
makefile.dos
mipsbsd.c
mpw-config.in
mpw-make.in
newsos3.c
netbsd.h
nlm-target.h
nlm.c
nlm32-alpha.c
nlm32-i386.c
nlm32-ppc.c
nlm32-sparc.c
nlm32.c
nlm64.c
nlmcode.h
nlmswap.h
ns32knetbsd.c
oasys.c
opncls.c
osf-core.c
pc532-mach.c
pe-arm.c
pei-arm.c
pe-i386.c
pei-i386.c
ptrace-core.c
reloc.c
reloc16.c
riscix.c
rs6000-core.c
section.c
som.c
som.h
sparclynx.c
sparcnetbsd.c
srec.c
stab-syms.c
sunos.c
syms.c
targets.c
tekhex.c
trad-core.c
versados.c

Things-to-lose:


Do-last:

i960xl_files="ChangeLog archures.c bfd-in2.h cpu-i960.c coffcode.h"
if ( echo $* | grep keep\-i960xl > /dev/null ) ; then
	if [ -n "${verbose}" ] ; then
		echo Keeping i960xl stuff in $i960xl_files.
	fi
else
	if [ -n "${verbose}" ]; then
		echo -n Cleaning i960xl in `pwd`:
	fi
	for f in $i960xl_files ; do
		if [ -n "${verbose}" ] ; then
			echo -n " " $f
		fi
		sed -e '/start\-sanitize\-i960xl/,/end\-sanitize\-i960xl/d' < $f > new
		if [ -n "${safe}" ] ; then
			mv $f .Recover
		fi
		mv new $f
	done
fi

rce_files="ChangeLog Makefile.in archures.c bfd-in2.h config.bfd configure.in targets.c aoutx.h libaout.h"
if ( echo $* | grep keep\-rce > /dev/null ) ; then
	for i in $rce_files ; do
		if test ! -d $i && (grep sanitize-rce $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping rce stuff in $i
			fi
		fi
	done
else
	for i in $rce_files ; do
		if test ! -d $i && (grep sanitize-rce $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"rce\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-rce/,/end-\sanitize\-rce/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

arc_files="ChangeLog Makefile.in archures.c reloc.c targets.c config.bfd configure.in bfd-in2.h elfcode.h libbfd.h"
if ( echo $* | grep keep\-arc > /dev/null ) ; then
	for i in $arc_files ; do
		if test ! -d $i && (grep sanitize-arc $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping arc stuff in $i
			fi
		fi
	done
else
	for i in $arc_files ; do
		if test ! -d $i && (grep sanitize-arc $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"arc\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-arc/,/end-\sanitize\-arc/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

for i in * ; do
	if test ! -d $i && (grep sanitize $i > /dev/null) ; then
		echo '***' Some mentions of Sanitize are still left in $i! 1>&2
	fi
done

# End of file.
