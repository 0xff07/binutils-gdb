# Makefile for the GNU linker ld (version 2)
# Copyright (C) 1989-1992 Free Software Foundation, Inc.

# This file is part of GNU ld..

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.


srcdir = .

prefix = /usr/local

program_transform_name =
exec_prefix = $(prefix)
bindir = $(exec_prefix)/bin
libdir = $(exec_prefix)/lib
tooldir = $(bindir)/$(target_alias)
datadir = $(prefix)/lib
mandir = $(prefix)/man
man1dir = $(mandir)/man1
man2dir = $(mandir)/man2
man3dir = $(mandir)/man3
man4dir = $(mandir)/man4
man5dir = $(mandir)/man5
man6dir = $(mandir)/man6
man7dir = $(mandir)/man7
man8dir = $(mandir)/man8
man9dir = $(mandir)/man9
infodir = $(prefix)/info
includedir = $(prefix)/include
docdir = $(datadir)/doc

gcclibdir = $(libdir)/gcc/$(target_alias)

SHELL = /bin/sh

INSTALL = install -c
INSTALL_PROGRAM = $(INSTALL)
INSTALL_DATA = $(INSTALL)
AR = ar
AR_FLAGS = qv
CFLAGS = -g
MAKEINFO = makeinfo
TEXI2DVI = texi2dvi
RANLIB = ranlib
CC_FOR_BUILD=$(CC)
BISON = `if [ -f ../bison/bison ] ; then echo ../bison/bison -y -L../bison/bison ; else echo bison -y ; fi`
LEX = `if [ -f ../flex/flex ] ; then echo ../flex/flex ;  else echo flex ; fi`

#version=/`./../gcc/gcc -dumpversion`
version=

# Seach path to override the default search path for -lfoo libraries.
# If LIB_PATH is empty, the ones in the script (if any) are left alone.
# (The default is usually /lib:usr/lib:/usr/local/lib, unless building
# a cross-linker, in which case the default is empty.  See genscripts.sh.)
# Otherwise, they are replaced with the ones given in LIB_PATH,
# which may have the form: LIB_PATH=/lib:/usr/local/lib
LIB_PATH =

BASEDIR	= ../..
INCLUDE	= $(srcdir)/../include
INCLUDES = -I. -I$(srcdir) -I$(srcdir)/../bfd -I$(INCLUDE) 

# What version of the manual to build
DOCVER = gen

# Where to find texinfo.tex to format docn with TeX
TEXIDIR = $(srcdir)/../texinfo/fsf

# Whether to get roff to put indexing entries on stderr
TEXI2OPT =
# You neeed this to generate ld-index.ms (or .mm or .me)
# TEXI2OPT = -i

TEXI2ROFF=texi2roff

# Which roff program to use to generate index for texi2roff'd doc
ROFF = groff

#stuff for self hosting (can be overridden in config file).
HOSTING_CRT0=/lib/crt0.o
HOSTING_LIBS=`if [ -f ../gcc/libgcc.a ] ; then echo ../gcc/libgcc.a ; else echo $(libdir)/libgcc.a; fi`  -lc
HOSTING_EMU=LDEMULATION=$(EMUL); export LDEMULATION

C++ = g++ -fgnu-linker

### Host, target, and site specific Makefile fragments come in here.
###

LINTFLAGS =  $(INCLUDES) $(EXTRA_DEF) 

.SUFFIXES: .y .x .xr .xu .xn .xbn .sc .scu .scr .scn $(SUFFIXES) .cc

.c.o:
	$(CC) -c $(CFLAGS) $(INCLUDES) $(HDEFINES) $(TDEFINES) $(CDEFINES) $<

.cc.o:
	$(C++) -c $(CFLAGS) -I$(srcdir) $<

# go directly to ld.new in case this ld isn't capable of
# linking native object on this host.  It can be renamed on
# install.
LD_PROG	= ld.new

# for self hosting
BFDLIB=./../bfd/libbfd.a
LIBIBERTY=./../libiberty/libiberty.a

ALL_EMULATIONS=em_lnk960.o em_sun3.o em_i386aout.o em_go32.o \
	em_m88kbcs.o em_a29k.o em_news.o em_hp300bsd.o \
	em_h8300hms.o em_ebmon29k.o em_sun4.o em_gld960.o \
	em_m68kcoff.o em_h8300xray.o em_st2000.o em_sa29200.o \
	em_vanilla.o em_i386coff.o em_z8ksim.o em_mipslit.o em_i386bsd.o \
	em_mipsbig.o em_mipsbsd.o em_mipsidt.o

EMULATION_OFILES=${ALL_EMULATIONS}
#EMULATION_OFILES=em_${EMUL}.o ${OTHER_EMULATIONS}

OFILES= ldgram.o ldlex.o lexsup.o ldlang.o mri.o ldctor.o ldmain.o ldindr.o \
	ldwarn.o ldwrite.o ldexp.o  ldemul.o ldver.o ldmisc.o ldsym.o \
	ldfile.o relax.o  lderror.o ${EMULATION_OFILES}

HEADERS=config.h ldmain.h ldmain.h ldwarn.h ldmisc.h ldindr.h \
	ldsym.h ldctor.h ldlang.h ldexp.h \
	ldlex.h ldwrite.h ldver.h ldemul.h ldfile.h ldgram.h ld.h

MANSOURCES=ld.tex

LDCSOURCES=ldlang.c lexsup.c ldctor.c mri.c ldindr.c ldmain.c ldwrite.c ldwarn.c ldlnk960.c \
	em_gld.c em_sun3.c em_go32.c em_m88k.c em_ebmon29k.c \
	ldgld960.c ldemul.c ldver.c ldmisc.c ldexp.c ldsym.c ldfile.c \
	relax.c lderror.c

GENERATED_SOURCES=ldgram.c ldlex.c em_*.c ldemul-list.h
GENERATED_HEADERS=ldgram.h ldemul-list.h

LDSOURCES=$(LDCSOURCES) ldgram.y ldlex.l ldgram.h

BFDSOURCES=../../bfd/common/*.c

SOURCES= $(LDSOURCES) $(BFDSOURCES)
LINTSOURCES=   $(LDCSOURCES) $(BFDSOURCES) $(GENERATED_SOURCES)

STAGESTUFF = *.x *.x[runN] *.sc[runN] $(GENERATED_SOURCES) $(GENERATED_HEADERS) $(OFILES) mkscript

all: $(LD_PROG)

check: bootstrap check-cdtest
installcheck:
info: ld.info

ldgram.h ldgram.c: ldgram.y
	$(BISON) $(BISONFLAGS) -d $(srcdir)/ldgram.y
	mv -f y.tab.c ldgram.c
	mv -f y.tab.h ldgram.h


DEF_EMUL = ` if [ -z "$(EMUL)" ] ; then \
	       echo "you must set a default emulation" 1>&2 ; \
	       exit 1 ; \
	     else \
	       echo -DDEFAULT_EMULATION='"$(EMUL)"' ; \
             fi`

ldmain.o: ldmain.c
	$(CC) $(CFLAGS) $(INCLUDES) $(HDEFINES) $(TDEFINES) $(CDEFINES) $(DEF_EMUL) -c $<

ldemul-list.h:  
	(echo "/* This file is automatically generated.  DO NOT EDIT! */";\
	for f in `echo " " ${EMULATION_OFILES} "" \
	 | sed -e 's/em_/ld/g' -e 's/ ld/ /g' -e 's/[.]o//g'`; do \
	    echo "extern ld_emulation_xfer_type ld_$${f}_emulation;"; \
	done;\
	echo "";\
	echo "#define EMULATION_LIST \\";\
	for f in `echo " " ${EMULATION_OFILES} "" \
	 | sed -e 's/em_/ld/g' -e 's/ ld/ /g' -e 's/[.]o//g'`; do \
	    echo "  &ld_$${f}_emulation, \\"; \
	done;\
	echo "  0") >ldemul-list.h

ldemul.o: ldemul-list.h

ldlex.c: ldlex.l ldgram.h
	$(LEX) -I -Cem $(srcdir)/ldlex.l
	mv lex.yy.c ldlex.c

# These all start with em_ so 'make clean' can find them.

GENSCRIPTS=sh $(srcdir)/genscripts.sh ${srcdir} ${host_alias} ${target_alias}
GEN_DEPENDS=./mkscript $(srcdir)/genscripts.sh

em_sun4.c: $(srcdir)/sun4.sh \
  $(srcdir)/generic.em $(srcdir)/aout.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} sun4.sh
em_sun3.c: $(srcdir)/sun3.sh \
  $(srcdir)/generic.em $(srcdir)/aout.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} sun3.sh
em_go32.c: $(srcdir)/go32.sh \
  $(srcdir)/generic.em $(srcdir)/aout.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} go32.sh
em_news.c: $(srcdir)/news.sh \
  $(srcdir)/generic.em $(srcdir)/aout.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} news.sh
em_hp300bsd.c: $(srcdir)/hp300bsd.sh \
  $(srcdir)/generic.em $(srcdir)/aout.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} hp300bsd.sh
em_i386aout.c: $(srcdir)/i386aout.sh \
  $(srcdir)/generic.em $(srcdir)/aout.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} i386aout.sh
em_ebmon29k.c: $(srcdir)/ebmon29k.sh \
  $(srcdir)/generic.em $(srcdir)/ebmon29k.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} ebmon29k.sh
em_sa29200.c: $(srcdir)/sa29200.sh \
  $(srcdir)/generic.em $(srcdir)/sa29200.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} sa29200.sh
em_a29k.c: $(srcdir)/a29k.sh \
  $(srcdir)/generic.em $(srcdir)/a29k.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} a29k.sh
em_m88kbcs.c: $(srcdir)/m88kbcs.sh \
  $(srcdir)/generic.em $(srcdir)/h8300hms.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} m88kbcs.sh
em_h8300hms.c: $(srcdir)/h8300hms.sh \
  $(srcdir)/h8300hms.em $(srcdir)/h8300hms.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} h8300hms.sh
em_h8300xray.c: $(srcdir)/h8300xray.sh \
  $(srcdir)/h8300xray.em $(srcdir)/h8300xray.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} h8300xray.sh
em_st2000.c: $(srcdir)/st2000.sh \
  $(srcdir)/st2000.em $(srcdir)/st2000.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} st2000.sh
em_z8ksim.c: $(srcdir)/z8ksim.sh \
  $(srcdir)/z8ksim.em $(srcdir)/z8ksim.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} z8ksim.sh
em_vanilla.c: $(srcdir)/vanilla.sh \
  $(srcdir)/vanilla.em $(srcdir)/vanilla.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} vanilla.sh
em_lnk960.c: $(srcdir)/lnk960.sh \
  $(srcdir)/lnk960.em $(srcdir)/i960.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} lnk960.sh
em_gld960.c: $(srcdir)/gld960.sh \
  $(srcdir)/gld960.em $(srcdir)/i960.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} gld960.sh
em_m68kcoff.c: $(srcdir)/m68kcoff.sh \
  $(srcdir)/generic.em $(srcdir)/m68kcoff.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} m68kcoff.sh
em_i386coff.c: $(srcdir)/i386coff.sh \
  $(srcdir)/generic.em $(srcdir)/i386coff.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} i386coff.sh
em_mipslit.c:  $(srcdir)/mipslit.sh \
  $(srcdir)/generic.em $(srcdir)/mips.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} mipslit.sh
em_i386bsd.c: $(srcdir)/i386bsd.sh \
  $(srcdir)/generic.em $(srcdir)/aout.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} i386bsd.sh
em_mipsbig.c:  $(srcdir)/mipsbig.sh \
  $(srcdir)/generic.em $(srcdir)/mips.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} mipsbig.sh
em_mipsbsd.c: $(srcdir)/mipsbsd.sh \
  $(srcdir)/generic.em $(srcdir)/aout.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} mipsbsd.sh
em_mipsidt.c: $(srcdir)/mipsidt.sh \
  $(srcdir)/generic.em $(srcdir)/mips.sc-sh ${GEN_DEPENDS}
	${GENSCRIPTS} mipsidt.sh

$(LD_PROG): $(OFILES) $(BFDLIB) $(LIBIBERTY)
	$(CC) $(CFLAGS) $(INCLUDES) $(HDEFINES) $(TDEFINES) $(CDEFINES) $(LDFLAGS) -o $(LD_PROG) $(OFILES) $(BFDLIB) $(LIBIBERTY) $(LOADLIBES)

# Rules for testing by relinking ld itself.

ld-partial.o: ld.new
	$(HOSTING_EMU); ./ld.new -o ld-partial.o -r $(OFILES)
ld1: ld-partial.o
	$(HOSTING_EMU); ./ld.new -o ld1 $(HOSTING_CRT0) ld-partial.o $(BFDLIB) $(LIBIBERTY) $(HOSTING_LIBS)

ld1-full: ld.new
	$(HOSTING_EMU); ./ld.new -o ld1-full $(HOSTING_CRT0) $(OFILES) $(BFDLIB) $(LIBIBERTY) $(HOSTING_LIBS)

ld2: ld1
	$(HOSTING_EMU); ./ld1 -o ld2 $(HOSTING_CRT0) $(OFILES) $(BFDLIB) $(LIBIBERTY) $(HOSTING_LIBS)

ld3: ld2
	$(HOSTING_EMU); ./ld2 -o ld3 $(HOSTING_CRT0) $(OFILES) $(BFDLIB) $(LIBIBERTY) $(HOSTING_LIBS)

bootstrap: ld3
	cmp ld2 ld3

cdtest: cdtest-main.o cdtest-func.o cdtest-foo.o
	$(HOSTING_EMU); ./ld.new -o cdtest $(HOSTING_CRT0) \
	  cdtest-main.o cdtest-func.o cdtest-foo.o $(HOSTING_LIBS)

check-cdtest: cdtest $(srcdir)/cdtest.exp
	./cdtest >cdtest.out
	diff $(srcdir)/cdtest.exp cdtest.out

######################################################################
# DOCUMENTATION TARGETS
# Manual configuration file; not usually attached to normal configuration,
# because almost all configs use "gen" version of manual.
#  Set DOCVER above to change.
configdoc.texi:	${DOCVER}-doc.texi
	ln -s ${DOCVER}-doc.texi configdoc.texi || \
	ln ${DOCVER}-doc.texi configdoc.texi || \
	cp ${DOCVER}-doc.texi configdoc.texi

# TeX output
dvi: ld.dvi
ld.dvi: $(srcdir)/ld.texinfo
	$(TEXI2DVI) $(srcdir)/ld.texinfo

ldint.dvi: $(srcdir)/ldint.texinfo
	$(TEXI2DVI) $(srcdir)/ldint.texinfo

# info file for online browsing
ld.info: $(srcdir)/ld.texinfo configdoc.texi
	$(MAKEINFO) -o ld.info $(srcdir)/ld.texinfo

ldint.info: $(srcdir)/ldint.texinfo
	$(MAKEINFO) -o ldint.info $(srcdir)/ldint.texinfo

#separate targets for "ms", "me", and "mm" forms of roff doc
# Try to use a recent texi2roff.  v2 was put on prep in jan91.
# If you want an index, see texi2roff doc for postprocessing 
# and add -i to texi2roff invocations below.
# Workarounds for texi2roff-2 (probably fixed in later texi2roff's, delete
#    correspondint -e lines when later texi2roff's are current)
# + @ifinfo's deleted explicitly due to texi2roff-2 bug w nested constructs.
# + @c's deleted explicitly because texi2roff sees texinfo commands in them
# + @   (that's at-BLANK) not recognized by texi2roff, turned into blank
# + @alphaenumerate is ridiculously new, turned into @enumerate

ld.ms: $(srcdir)/ld.texinfo
	sed -e '/\\input texinfo/d' \
		-e '/@c TEXI2ROFF-KILL/,/@c END TEXI2ROFF-KILL/d' \
		-e '/^@ifinfo/,/^@end ifinfo/d' \
		-e '/^@c/d' \
		-e 's/{.*,,/{/' \
		-e 's/@ / /g' \
		-e 's/^@alphaenumerate/@enumerate/g' \
		-e 's/^@end alphaenumerate/@end enumerate/g' \
		$(srcdir)/ld.texinfo | \
	$(TEXI2ROFF) $(TEXI2OPT) -ms | \
	sed -e 's/---/\\(em/g' \
		>>ld.ms 

# index for roff output
ld-index.ms: ld.ms
	$(ROFF) -ms ld.ms 2>&1 1>/dev/null | \
		sed -e '/: warning:/d' | \
		texi2index >ld-index.ms

# roff output (-mm)
ld.mm: $(srcdir)/ld.texinfo
	sed -e '/\\input texinfo/d' \
		-e '/@c TEXI2ROFF-KILL/,/@c END TEXI2ROFF-KILL/d' \
		-e '/^@ifinfo/,/^@end ifinfo/d' \
		-e '/^@c/d' \
		-e 's/{.*,,/{/' \
		-e '/@noindent/d' \
		-e 's/@ / /g' \
		-e 's/^@alphaenumerate/@enumerate/g' \
		-e 's/^@end alphaenumerate/@end enumerate/g' \
		$(srcdir)/ld.texinfo | \
	$(TEXI2ROFF) $(TEXI2OPT) -mm | \
	sed -e 's/---/\\(em/g' \
	>ld.mm 

# index for roff output
ld-index.mm: ld.mm
	$(ROFF) -mm ld.mm 2>&1 1>/dev/null | \
		sed -e '/: warning:/d' | \
		texi2index >ld-index.mm

# roff output (-me)
ld.me: $(srcdir)/ld.texinfo
	sed -e '/\\input texinfo/d' \
		-e '/@c TEXI2ROFF-KILL/,/@c END TEXI2ROFF-KILL/d' \
		-e '/^@ifinfo/,/^@end ifinfo/d' \
		-e '/^@c/d' \
		-e 's/{.*,,/{/' \
		-e 's/@ / /g' \
		-e 's/^@alphaenumerate/@enumerate/g' \
		-e 's/^@end alphaenumerate/@end enumerate/g' \
		$(srcdir)/ld.texinfo | \
	$(TEXI2ROFF) $(TEXI2OPT) -me | \
	sed -e 's/---/\\(em/g' \
		>>ld.me 

# index for roff output
ld-index.me: ld.me
	$(ROFF) -me ld.me 2>&1 1>/dev/null | \
		sed -e '/: warning:/d' | \
		texi2index >ld-index.me


######################################################################

./mkscript: $(srcdir)/mkscript.c
	$(CC_FOR_BUILD)  -o mkscript $(srcdir)/mkscript.c

ldlex.o: ldlex.c ldgram.h
ldgram.o: ldgram.c
ldgram.c:ldgram.y
ldexp.o: ldexp.c ldgram.h
ldctor.o: ldctor.c ldgram.h
ldlang.o: ldlang.c ldgram.h
ldmain.o: ldmain.c ldgram.h
ldwrite.o: ldwrite.c ldgram.h
lexsup.o: lexsup.c ldgram.h
mri.o: mri.c ldgram.h
relax.o: relax.c ldgram.h

h8300hms.o:h8300hms.c
h8300xray.o:h8300xray.c
st2000.o:st2000.c
z8ksim.o:z8ksim.c

stage1:	force
	-mkdir stage1
	-mv -f $(STAGESTUFF) $(LD_PROG) stage1
	-(cd stage1 ; ln -s $(LD_PROG) ld)

stage2:	force
	-mkdir stage2
	-mv -f $(STAGESTUFF) $(LD_PROG) stage2
	-(cd stage2 ; ln -s $(LD_PROG) ld)

stage3:	force
	-mkdir stage3
	-mv -f $(STAGESTUFF) $(LD_PROG) stage3
	-(cd stage3 ; ln -s $(LD_PROG) ld)

against=stage2

comparison: force
	for i in $(STAGESTUFF) $(LD_PROG) ; do cmp $$i $(against)/$$i ; done

de-stage1: force
	-(cd stage1 ; mv -f * ..)
	-rm ld
	-rmdir stage1

de-stage2: force
	-(cd stage2 ; mv -f * ..)
	-rm ld
	-rmdir stage2

de-stage3: force
	-(cd stage3 ; mv -f * ..)
	-rm ld
	-rmdir stage3

# Stuff that should be included in a distribution:
LDDISTSTUFF=ldgram.c ldgram.h ldlex.c ld.mm
diststuff: $(LDDISTSTUFF)

mostlyclean:
	-rm -f $(STAGESTUFF) ld.?? ld.??? ldlex.[qp]
	-rm -f ld ld1 ld2 ld3 *.o y.output cdtest cdtest.out
clean: mostlyclean
	-rm -f $(LD_PROG)
distclean: clean
	-rm -f Makefile config.status TAGS sysdep.h
realclean: distclean
	-rm -f $(LDDISTSTUFF)

lintlog:$(SOURCES) Makefile
	$(LINT) -abhxzn  $(LINTFLAGS)  $(LINTSOURCES) \
| grep -v "pointer casts may be troublesome" \
| grep -v "possible pointer alignment problem" \
| grep -v "ignore" \
| grep -v "conversion from long may lose accuracy" \
| grep -v "warning: constant argument to NOT" \
| grep -v "enumeration type clash, operator CAST" \
| grep -v "warning: constant in conditional context"\
| grep -v "archive\.c"


tags TAGS:$(SOURCES) $(HEADERS)
	etags -t $?


objdump:objdump.c 

.PHONY: install
install: $(LD_PROG)
	-parent=`echo $(bindir)|sed -e 's@/[^/]*$$@@'`; \
	if [ -d $$parent ] ; then true ; else mkdir $$parent ; fi
	-if [ -d $(bindir) ] ; then true ; else mkdir $(bindir) ; fi
	-parent=`echo $(man1dir)|sed -e 's@/[^/]*$$@@'`; \
	if [ -d $$parent ] ; then true ; else mkdir $$parent ; fi
	-if [ -d $(man1dir) ] ; then true ; else mkdir $(man1dir) ; fi
	-n=`t='$(program_transform_name)'; echo ld | sed -e "" $$t`; \
	rm -f $(bindir)/$$n; \
	$(INSTALL_PROGRAM) ld.new $(bindir)/$$n; \
	$(INSTALL_DATA) $(srcdir)/ld.1 $(man1dir)/$$n.1; \
	if [ -d $(tooldir) ]; then \
	  if [ -d $(tooldir)/bin ] ; then true ; else mkdir $(tooldir)/bin ; fi; \
	  rm -f $(tooldir)/bin/ld; \
	  ln $(bindir)/$$n $(tooldir)/bin/ld \
	   || $(INSTALL_PROGRAM) ld.new $(tooldir)/bin/ld; \
	  rm -f $(tooldir)/bin/gld; \
	  ln $(tooldir)/bin/ld $(tooldir)/bin/gld; \
	else true; fi

install-info: info
	-parent=`echo $(infodir)|sed -e 's@/[^/]*$$@@'`; \
	if [ -d $$parent ] ; then true ; else mkdir $$parent ; fi
	-if [ -d $(infodir) ] ; then true ; else mkdir $(infodir) ; fi
	for i in ld.info* ; do \
		$(INSTALL_DATA) $$i $(infodir)/$$i ; \
	done

clean-info:
	-rm -rf *.info*

#-----------------------------------------------------------------------------
#		'STANDARD' GNU/960 TARGETS BELOW THIS POINT
#
# 'VERSION' file must be present and contain a string of the form "x.y"
#-----------------------------------------------------------------------------

ver960.c: FORCE
	rm -f ver960.c
	echo "char ${TARG}_ver[]= \"${TARG} `cat VERSION`, `date`\";" > ver960.c


# This target should be invoked before building a new release.
# 'VERSION' file must be present and contain a string of the form "x.y"
#
roll:
	@V=`cat VERSION`		; \
	MAJ=`sed 's/\..*//' VERSION`	; \
	MIN=`sed 's/.*\.//' VERSION`	; \
	V=$$MAJ.`expr $$MIN + 1`	; \
	rm -f VERSION			; \
	echo $$V >VERSION		; \
	echo Version $$V


dep: $(LDSOURCES)
	mkdep $(CFLAGS) $?

# Dummy target to force execution of dependent targets.
#
force:

# Target to uncomment host-specific lines in this makefile.  Such lines must
# have the following string beginning in column 1: #__<hostname>__#
# Original Makefile is backed up as 'Makefile.old'.
#
# Invoke with:  make make HOST=xxx
#
make:
	-@if test $(HOST)x = x ; then \
		echo 'Specify "make make HOST=???"'; \
		exit 1; \
	fi ; \
	grep -s "^#The next line was generated by 'make make'" Makefile; \
	if test $$? = 0 ; then	\
		echo "Makefile has already been processed with 'make make'";\
		exit 1; \
	fi ; \
	mv -f Makefile Makefile.old; \
	echo "#The next line was generated by 'make make'"	 >Makefile ; \
	echo "HOST=$(HOST)"					>>Makefile ; \
	echo							>>Makefile ; \
	sed "s/^#__$(HOST)__#//" < Makefile.old			>>Makefile

#

Makefile: $(srcdir)/Makefile.in $(host_makefile_frag) $(target_makefile_frag)
	$(SHELL) ./config.status

### mode:fundamental ***
### Local Variables: ***
### page-delimiter: "^#" ***
### End: ***
### end of file


# IF YOU PUT ANYTHING HERE IT WILL GO AWAY
