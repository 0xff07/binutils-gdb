From db62e0099b194aa7a91bf7b705feb23d6f3f1756 Mon Sep 17 00:00:00 2001
From: "H.J. Lu" <hjl.tools@gmail.com>
Date: Thu, 2 Apr 2020 20:38:02 -0700
Subject: [PATCH] elf: Remove zero-sized relocation section from section group

Remove zero-sized relocation section from a section group since it has
been removed from the output.

	PR ld/25767
	* elflink.c (_bfd_elf_fixup_group_sections): Remove zero-sized
	relocation section from section group.
---
 bfd/elf.c | 58 ++++++++++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 47 insertions(+), 11 deletions(-)

diff --git a/bfd/elf.c b/bfd/elf.c
index 86dadea05ca..249cb3ff1ff 100644
--- a/bfd/elf.c
+++ b/bfd/elf.c
@@ -7929,19 +7929,55 @@ _bfd_elf_fixup_group_sections (bfd *ibfd, asection *discarded)
 		elf_section_flags (s->output_section) &= ~SHF_GROUP;
 		elf_group_name (s->output_section) = NULL;
 	      }
-	    /* Conversely, if the member section is not being output
-	       but the SHT_GROUP section is, then adjust its size.  */
-	    else if (s->output_section == discarded
-		     && isec->output_section != discarded)
+	    else
 	      {
 		struct bfd_elf_section_data *elf_sec = elf_section_data (s);
-		removed += 4;
-		if (elf_sec->rel.hdr != NULL
-		    && (elf_sec->rel.hdr->sh_flags & SHF_GROUP) != 0)
-		  removed += 4;
-		if (elf_sec->rela.hdr != NULL
-		    && (elf_sec->rela.hdr->sh_flags & SHF_GROUP) != 0)
-		  removed += 4;
+		if (s->output_section == discarded
+		    && isec->output_section != discarded)
+		  {
+		    /* Conversely, if the member section is not being
+		       output but the SHT_GROUP section is, then adjust
+		       its size.  */
+		    removed += 4;
+		    if (elf_sec->rel.hdr != NULL
+			&& (elf_sec->rel.hdr->sh_flags & SHF_GROUP) != 0)
+		      removed += 4;
+		    if (elf_sec->rela.hdr != NULL
+			&& (elf_sec->rela.hdr->sh_flags & SHF_GROUP) != 0)
+		      removed += 4;
+		  }
+		else
+		  {
+		    const char *name;
+		    /* Also adjust for zero-sized relocation member
+		       section.  */
+		    if (elf_sec->rel.hdr != NULL
+			&& elf_sec->rel.hdr->sh_size == 0)
+		      {
+			removed += 4;
+			name = bfd_elf_string_from_elf_section
+			  (ibfd, (elf_elfheader (ibfd)->e_shstrndx),
+			   elf_sec->rel.hdr->sh_name);
+			_bfd_error_handler
+			  /* xgettext:c-format */
+			  (_("%pB: warning: zero-sized relocation section "
+			     "%s' for section %pA found - ignoring"),
+			   ibfd, name, s);
+		      }
+		    if (elf_sec->rela.hdr != NULL
+			&& elf_sec->rela.hdr->sh_size == 0)
+		      {
+			removed += 4;
+			name = bfd_elf_string_from_elf_section
+			  (ibfd, (elf_elfheader (ibfd)->e_shstrndx),
+			   elf_sec->rela.hdr->sh_name);
+			_bfd_error_handler
+			  /* xgettext:c-format */
+			  (_("%pB: warning: zero-sized relocation section "
+			     "%s' for section %pA found - ignoring"),
+			   ibfd, name, s);
+		      }
+		  }
 	      }
 	    s = elf_next_in_group (s);
 	    if (s == first)
-- 
2.25.1

