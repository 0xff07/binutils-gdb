Remember standard operating procedure: Patches go into the FSF tree
*first*, when possible.  At the very least non-Google specific patches
should be submitted to the FSF first.  If you need to timeout on waiting
for FSF approval that's fine.  When the patch goes in upstream, then
delete its entry here and copy over the entry from the appropriate
ChangeLog(s).  The goal here is to minimize unnecessary local patches,
they are an ongoing maintenance burden.

2015-09-05  Doug Evans  <dje@google.com>

	N.B. No further README.google entries are required for google.[ch].
	You can still add them if they make sense of course.
	This one exists because of the change to Makefile.in.
	* Makefile.in: Add google.c.
	* google.c: New file.
	* google.h: New file.

2015-09-05  Doug Evans  <dje@google.com>

	Implement 1155829.
	* exec.c (elf_64_p): New function.
	(exec_file_attach): If the file format is not recognized, check if
	it's 64-bit elf and if so recommend using 64-bit gdb. Improve error
	message if binary is accidently a core file.
	* main.c (captured_main): Call warn_troublesome_environment if !quiet.
	* google.c (warn_troublesome_environment): New function.
	* symfile.c (print_no_debugging_symbols_found): New function.
	(symbol_file_add_with_addrs_or_offsets): Call it if no debugging
	symbols found.
	(reread_symbols): Ditto.
	* testsuite/lib/gdb.exp (gdb_file_cmd): Update to match
	output of print_no_debugging_symbols_found.
	Properly update gdb_file_cmd_debug_info for nodebug when
	loading new symbol table.
	* testsuite/gdb.base/sepdebug.exp: Update expected output to match
	"no debugging symbols found" warning change for 1155829.
--- README.google	2015-09-05 14:53:18.000000000 -0700
+++ README.google	2015-09-05 15:01:01.000000000 -0700
+
+2015-09-05  Doug Evans  <dje@google.com>
+
+	Fix for http://b/2630476
+	* remote.c (readchar): Use minimum timeout of 10 minutes in noack mode.
+	(putpkt_binary): Don't resend QStartNoAckMode command packets.
+
+	* remote.c (readchar): Don't lengthen timeout value of 0,
+	return immediately means return immediately.
--- README.google	2015-09-05 15:13:05.000000000 -0700
+++ README.google	2015-09-05 15:16:13.000000000 -0700
+
+2015-09-05  Doug Evans  <dje@google.com>
+
+	Temporary hack to make these tests pass with Fission.
+	To be replaced with something that can be checked in upstream
+	when support for .dwp files is completed.
+	* gdb.python/py-prettyprint.exp: Do all C testing before any C++
+	testing.
+
+	* testsuite/gdb.mi/mi-var-invalidate.exp: Reorder compilations so
+	that var-cmd.dwo isn't clobbered.
+
+	* testsuite/boards/fission.exp: Add blaze support.
--- README.google	2015-09-05 15:16:13.000000000 -0700
+++ README.google	2015-09-05 15:19:05.000000000 -0700
+
+2015-09-05  Doug Evans  <dje@google.com>
+
+	* dwarf2read.c (use_index_sections): New static global.
+	(read_index_from_section): Check it.
+	(_initialize_dwarf2_read): New option "use-index-sections".
--- README.google	2015-09-05 15:21:34.000000000 -0700
+++ README.google	2015-09-05 15:24:02.000000000 -0700
+
+2015-09-05  Doug Evans  <dje@google.com>
+
+	Temp fix for http://sourceware.org/bugzilla/show_bug.cgi?id=14704
+	* bfd/elf.c (bfd_section_from_shdr, case SHT_REL,SHT_RELA): Don't mark
+	the target section as having relocs if the reloc section is empty.
