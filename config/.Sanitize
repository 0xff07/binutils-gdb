# .Sanitize for devo/config

# Each directory to survive its way into a release will need a file
# like this one called "./.Sanitize".  All keyword lines must exist,
# and must exist in the order specified by this file.  Each directory
# in the tree will be processed, top down, in the following order.

# Hash started lines like this one are comments and will be deleted
# before anything else is done.  Blank lines will also be squashed
# out.

# The lines between the "Do-first:" line and the "Things-to-keep:"
# line are executed as a /bin/sh shell script before anything else is
# done in this directory.

Do-first:

if ( echo $* | grep keep\-r5900 > /dev/null ) ; then
	keep_these_too="${keep_these_too} mt-r5900"
else
        lose_these_too="${lose_these_too} mt-r5900"
fi

if ( echo $* | grep lose\-mswin > /dev/null ) ; then
        lose_these_too="${lose_these_too} mh-windows"
else
	keep_these_too="${keep_these_too} mh-windows"
fi

if ( echo $* | grep keep\-sky > /dev/null ) ; then
	keep_these_too="${keep_these_too} mt-sky mt-skyb"
else
        lose_these_too="${lose_these_too} mt-sky mt-skyb"
fi

# All files listed between the "Things-to-keep:" line and the
# "Do-last:" line will be kept.  All other files will be removed.
# Directories listed in this section will have their own Sanitize
# called.  Directories not listed will be removed in their entirety
# with rm -rf.

Things-to-keep:

ChangeLog
mh-a68bsd
mh-aix386
mh-aix43
mh-apollo68
mh-cxux
mh-cygwin
mh-decstation
mh-delta88
mh-dgux
mh-dgux386
mh-elfalphapic
mh-go32
mh-hp300
mh-hpux
mh-hpux8
mh-irix4
mh-irix5
mh-irix6
mh-lynxos
mh-lynxrs6k
mh-m68kpic
mh-mingw32
mh-ncr3000
mh-ncrsvr43
mh-necv4
mh-papic
mh-ppcpic
mh-riscos
mh-sco
mh-solaris
mh-sparcpic
mh-sun3
mh-sysv
mh-sysv4
mh-sysv5
mh-vaxult2
mh-x86pic
mpw
mpw-mh-mpw
mt-elfalphapic
mt-linux
mt-m68kpic
mt-netware
mt-ospace
mt-papic
mt-ppcpic
mt-sparcpic
mt-v810
mt-x86pic

Things-to-lose:
acinclude.m4


# The lines between the "Do-last:" line and the end of the file
# are executed as a /bin/sh shell script after everything else is
# done.

Do-last:

r5900_files="ChangeLog"
if ( echo $* | grep keep\-r5900 > /dev/null ) ; then
	for i in $r5900_files ; do
		if test ! -d $i && (grep sanitize-r5900 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping r5900 stuff in $i
			fi
		fi
	done
else
	for i in $r5900_files ; do
		if test ! -d $i && (grep sanitize-r5900 $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"r5900\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-r5900/,/end-\sanitize\-r5900/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

sky_files="ChangeLog"
if ( echo $* | grep keep\-sky > /dev/null ) ; then
	for i in $sky_files ; do
		if test ! -d $i && (grep sanitize-sky $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping sky stuff in $i
			fi
		fi
	done
else
	for i in $sky_files ; do
		if test ! -d $i && (grep sanitize-sky $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"sky\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-sky/,/end-\sanitize\-sky/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

cygnus_files="mh-go32"
if ( echo $* | grep keep\-cygnus > /dev/null ) ; then
	for i in $cygnus_files ; do
		if test ! -d $i && (grep sanitize-cygnus $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Keeping cygnus stuff in $i
			fi
		fi
	done
else
	for i in $cygnus_files ; do
		if test ! -d $i && (grep sanitize-cygnus $i > /dev/null) ; then
			if [ -n "${verbose}" ] ; then
				echo Removing traces of \"cygnus\" from $i...
			fi
			cp $i new
			sed '/start\-sanitize\-cygnus/,/end-\sanitize\-cygnus/d' < $i > new
			if [ -n "${safe}" -a ! -f .Recover/$i ] ; then
				if [ -n "${verbose}" ] ; then
					echo Caching $i in .Recover...
				fi
				mv $i .Recover
			fi
			mv new $i
		fi
	done
fi

# eof
